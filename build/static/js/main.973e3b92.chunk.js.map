{"version":3,"sources":["utils/firebase.js","images/avatar/large/matthew.png","images/avatar/large/kristy.png","Header.js","utils/stringFormat.js","components/Accounts.js","components/Posts.js","components/Balances.js","components/Login.js","components/Dashboard.js","components/User.js","App.js","index.js"],"names":["app","firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","db","firestore","auth","Header","history","useHistory","React","useState","activeItem","setActiveItem","user","setUser","handleClick","e","name","useEffect","onAuthStateChanged","currUser","Menu","secondary","pointing","widths","Item","as","Link","to","onClick","active","position","signOut","then","push","Icon","displayName","numFormat","total","Intl","NumberFormat","currency","format","Accounts","currentUser","open","setOpen","docID","setDocID","setName","balance","setBalance","prior","setPrior","gridRows","setGridRows","setDefalut","col","collection","where","email","onSnapshot","snapshot","console","log","size","rows","docs","map","doc","data","id","grid","i","columns","length","Grid","Column","Segment","textAlign","Label","attached","Row","row","color","Container","className","Modal","closeIcon","onClose","Content","Form","Field","value","onChange","target","placeholder","type","Dropdown","selection","options","key","text","obj","Actions","Button","floated","delete","createdAt","Timestamp","now","update","add","Posts","title","setTitle","income","setIncome","Date","toISOString","slice","date","setDate","isIncome","setIsIncome","activeBalance","setActiveBalance","posts","setPosts","topAccounts","setTopAccounts","handleItemClick","get","fluid","expense","set","inverted","Statistic","horizontal","Value","verticalAlign","Table","unstackable","Body","Cell","circular","Balances","account","setAccount","activeAccount","setActiveAccount","balances","setBalances","updateBalance","amt","colBalances","filter","Login","useRef","password","mobile","tablet","computer","ref","defaultValue","signInWithEmailAndPassword","current","userCrendential","basic","Dashboard","months","num","setTotal","month","setMonth","stretched","User","updateProfile","centered","Card","Image","src","sea","girl","Meta","Description","extra","App","path","component","container","document","getElementById","ReactDom","render"],"mappings":"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","file":"static/js/main.973e3b92.chunk.js","sourcesContent":["import firebase from 'firebase/app'\r\nimport 'firebase/firestore'\r\nimport \"firebase/auth\"\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\r\n    authDomain: \"social-cool-f16ba.firebaseapp.com\",\r\n    projectId: \"social-cool-f16ba\",\r\n    storageBucket: \"social-cool-f16ba.appspot.com\",\r\n    messagingSenderId: \"578558980743\",\r\n    appId: \"1:578558980743:web:4668ba80e8df3c24087e22\"\r\n  };\r\n\r\n const app = firebase.initializeApp(firebaseConfig)\r\n  const db = firebase.firestore()\r\n\r\n const auth = app.auth()\r\n\r\n  export default firebase\r\n  export {db,auth}","export default __webpack_public_path__ + \"static/media/matthew.a5edfa2f.png\";","export default __webpack_public_path__ + \"static/media/kristy.8300278f.png\";","import React from \"react\";\r\nimport { Menu, Icon, Image } from \"semantic-ui-react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { auth } from \"./utils/firebase\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport sea from \"./images/avatar/large/matthew.png\";\r\nimport girl from \"./images/avatar/large/kristy.png\";\r\nfunction Header() {\r\n  // const user = auth.currentUser;\r\n  const history = useHistory();\r\n  const [activeItem, setActiveItem] = React.useState(\"\");\r\n  const [user, setUser] = React.useState(null);\r\n  React.useEffect(() => {\r\n    auth.onAuthStateChanged((currUser) => {\r\n      setUser(currUser);\r\n    });\r\n  }, []);\r\n\r\n  function handleClick(e, { name }) {\r\n    setActiveItem(name);\r\n  }\r\n  return (\r\n    <Menu secondary pointing widths={5}>\r\n      <Menu.Item\r\n        as={Link}\r\n        to=\"/accounts\"\r\n        name=\"accounts\"\r\n        onClick={handleClick}\r\n        active={activeItem === \"accounts\"}\r\n      >\r\n        {/* <Icon name=\"user\" disabled={activeItem !== \"home\"} /> */}\r\n        帳戶\r\n      </Menu.Item>\r\n      <Menu.Item\r\n        as={Link}\r\n        to=\"/balances\"\r\n        name=\"balances\"\r\n        onClick={handleClick}\r\n        active={activeItem === \"balances\"}\r\n      >\r\n        收支\r\n      </Menu.Item>\r\n\r\n      <Menu.Item\r\n        as={Link}\r\n        to=\"/dashboard\"\r\n        name=\"dashboard\"\r\n        onClick={handleClick}\r\n        active={activeItem === \"dashboard\"}\r\n      >\r\n        Dashboard\r\n      </Menu.Item>\r\n\r\n      {user && (\r\n        <Menu.Item\r\n          as={Link}\r\n          to=\"/user\"\r\n          name=\"user\"\r\n          onClick={handleClick}\r\n          active={activeItem === \"user\"}\r\n        >\r\n          設定\r\n        </Menu.Item>\r\n      )}\r\n\r\n      <Menu.Menu position=\"right\">\r\n        {user ? (\r\n          <Menu.Item\r\n            name=\"\"\r\n            onClick={() => {\r\n              auth.signOut().then(() => {\r\n                history.push(\"/login\");\r\n              });\r\n            }}\r\n          >\r\n             \r\n        <Icon name=\"sign-out\"/>{user.displayName}\r\n          </Menu.Item>\r\n        ) : (\r\n          <Menu.Item name=\"login\" as={Link} to=\"/login\" onClick={handleClick}>\r\n            Login\r\n          </Menu.Item>\r\n        )}\r\n      </Menu.Menu>\r\n    </Menu>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","const numFormat = function numberFormat(total) {\r\n  var formatter = new Intl.NumberFormat(\"en-US\", {\r\n    currency: \"USD\", // 2,500\r\n   /* style: \"currency\"  $2,500.00 */\r\n  });\r\n  return formatter.format(total);\r\n};\r\n\r\nexport { numFormat };\r\n","import React from \"react\";\r\nimport {\r\n  Grid,\r\n  Segment,\r\n  Label,\r\n  Header,\r\n  Button,\r\n  Icon,\r\n  Modal,\r\n  Form,\r\n  Dropdown,\r\n  Container,\r\n} from \"semantic-ui-react\";\r\nimport firebase, { db } from \"../utils/firebase\";\r\nimport { numFormat } from \"../utils/stringFormat\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { auth } from \"../utils/firebase\";\r\n\r\nexport default function Accounts() {\r\n  const user = auth.currentUser;\r\n  // 編輯視窗顯示控制\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  // 資料欄位\r\n  //  { name: \"土地銀行1\", balance: \"908\", prior: \"1\" },\r\n  const [docID, setDocID] = React.useState(\"\");\r\n  const [name, setName] = React.useState(\"\");\r\n  const [balance, setBalance] = React.useState(\"\");\r\n  const [prior, setPrior] = React.useState(\"\");\r\n\r\n  // 區塊顯示\r\n  const [gridRows, setGridRows] = React.useState([]);\r\n\r\n  React.useEffect(() => {\r\n    let col = db.collection(\"accounts\");\r\n    // col.orderBy(\"prior\");\r\n    if (user) col = col.where(\"user\", \"==\", user.email);\r\n    // col=col.where(\"name\",\"==\",\"晚\")\r\n    col = col.onSnapshot((snapshot) => {\r\n      console.log(snapshot.size)\r\n      const rows = snapshot.docs.map((doc) => {\r\n        return { ...doc.data(), id: doc.id };\r\n      });\r\n\r\n      const grid = [];\r\n      let i = 0;\r\n      let columns = [];\r\n      // 沒有資料時,顯示新增鈕\r\n      if (rows.length == 0) {\r\n        columns.push(\r\n          <Grid.Column key=\"0\">\r\n            <Segment\r\n              textAlign=\"center\"\r\n              onClick={() => {\r\n                setOpen(true);\r\n              }}\r\n            >\r\n              <Label attached=\"top\">新增</Label>\r\n\r\n              <Header>+</Header>\r\n            </Segment>\r\n          </Grid.Column>\r\n        );\r\n        grid.push(<Grid.Row key={i}>{columns}</Grid.Row>);\r\n      }\r\n      for (let row of rows) {\r\n        // 資料區塊最前面放置新增鈕\r\n        if (i == 0) {\r\n          columns.push(\r\n            <Grid.Column key=\"0\">\r\n              <Segment\r\n                textAlign=\"center\"\r\n                onClick={() => {\r\n                  setOpen(true);\r\n                }}\r\n              >\r\n                <Label attached=\"top\">新增</Label>\r\n                <Header>+</Header>\r\n              </Segment>\r\n            </Grid.Column>\r\n          );\r\n        }\r\n        // 資料區塊\r\n        columns.push(\r\n          <Grid.Column key={i + 1}>\r\n            <Segment\r\n              textAlign=\"center\"\r\n              onClick={() => {\r\n                setOpen(true);\r\n                setDocID(row.id);\r\n                setName(row.name);\r\n                setPrior(row.prior);\r\n                setBalance(row.balance);\r\n              }}\r\n            >\r\n              <Label color=\"teal\" attached=\"top\">\r\n                {row.name}\r\n              </Label>\r\n              <Header>{numFormat(row.balance)}</Header>\r\n            </Segment>\r\n          </Grid.Column>\r\n        );\r\n        // 每列3筆區塊\r\n        // i = 1,4,7... 或最後一筆時加入一列\r\n        // + 0 1\r\n        // 2 3 4\r\n        // 5 6\r\n        if (i % 3 == 1 || i == rows.length - 1) {\r\n          grid.push(<Grid.Row key={i}>{columns}</Grid.Row>);\r\n          columns = [];\r\n        }\r\n\r\n        i++;\r\n      }\r\n      setGridRows(grid);\r\n    });\r\n  }, []);\r\n\r\n  function saveRow() {\r\n    const row = {\r\n      name: name,\r\n      balance: balance,\r\n      prior,\r\n      user: user.email,\r\n      createdAt: firebase.firestore.Timestamp.now(),\r\n    };\r\n    if (docID) {\r\n      db.collection(\"accounts\").doc(docID).update(row);\r\n    } else {\r\n      db.collection(\"accounts\").add(row);\r\n    }\r\n\r\n    setDefalut();\r\n  }\r\n\r\n  function deleteRow() {\r\n    if (docID) {\r\n      db.collection(\"accounts\")\r\n        .doc(docID)\r\n        .delete()\r\n        .then(() => {\r\n          setDefalut();\r\n        });\r\n    }\r\n  }\r\n\r\n  function setDefalut() {\r\n    setOpen(false);\r\n    setName(\"\");\r\n    setBalance(\"\");\r\n    setPrior(\"\");\r\n  }\r\n\r\n  const friendOptions = [\r\n    {\r\n      key: \"1\",\r\n      text: \"1\",\r\n      value: \"1\",\r\n    },\r\n    {\r\n      key: \"2\",\r\n      text: \"2\",\r\n      value: \"2\",\r\n    },\r\n    {\r\n      key: \"3\",\r\n      text: \"3\",\r\n      value: \"3\",\r\n    },\r\n    {\r\n      key: \"4\",\r\n      text: \"4\",\r\n      value: \"4\",\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <Container>\r\n        <div className=\"App\">\r\n          <Grid columns={3}>{gridRows}</Grid>\r\n        </div>\r\n\r\n        <Modal\r\n          closeIcon\r\n          open={open}\r\n          onClose={() => {\r\n            setOpen(false);\r\n            setDefalut();\r\n          }}\r\n        >\r\n          <Header>編輯帳戶</Header>\r\n          <Modal.Content>\r\n            <Form size=\"large\">\r\n              <Form.Field>\r\n                <label>帳戶名稱</label>\r\n                <input\r\n                  value={name}\r\n                  onChange={(e) => {\r\n                    setName(e.target.value);\r\n                  }}\r\n                  placeholder=\"please enter your name\"\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>餘額</label>\r\n                <input\r\n                  type=\"number\"\r\n                  value={balance}\r\n                  onChange={(e) => {\r\n                    setBalance(e.target.value);\r\n                  }}\r\n                  placeholder=\"please enter your amount\"\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>順位</label>\r\n                <Dropdown\r\n                  selection\r\n                  value={prior}\r\n                  placeholder=\"順位\"\r\n                  options={friendOptions}\r\n                  onChange={(e, obj) => {\r\n                    setPrior(obj.value);\r\n                  }}\r\n                ></Dropdown>\r\n              </Form.Field>\r\n            </Form>\r\n          </Modal.Content>\r\n          <Modal.Actions>\r\n            <Button color=\"red\" floated=\"left\" onClick={deleteRow}>\r\n              <Icon name=\"remove\" />\r\n              Delete\r\n            </Button>\r\n            <Button color=\"green\" onClick={saveRow}>\r\n              <Icon name=\"check\" />\r\n              Save\r\n            </Button>\r\n          </Modal.Actions>\r\n        </Modal>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n","import { db } from \"../utils/firebase\";\r\nimport React from \"react\";\r\nimport { numFormat } from \"../utils/stringFormat\";\r\n\r\nimport {\r\n  Grid,\r\n  Label,\r\n  Icon,\r\n  Container,\r\n  Segment,\r\n  Menu,\r\n  Card,\r\n  List,\r\n  Button,\r\n  Table,\r\n  Header,\r\n  Statistic,\r\n  Modal,\r\n  Form,\r\n} from \"semantic-ui-react\";\r\nfunction Posts() {\r\n  const rows = [\r\n    { name: \"現金\", amt: \"678\", date: \"2022-09-01\" },\r\n    { name: \"信用卡\", amt: \"4,567\", date: \"2022-01-08\" },\r\n    { name: \"玉山\", amt: \"908\", date: \"2022-10-22\" },\r\n    { name: \"中國信託\", amt: \"908\", date: \"2022-10-22\" },\r\n  ];\r\n  // 編輯視窗顯示控制\r\n  const [open, setOpen] = React.useState(false);\r\n  // 資料欄位\r\n  const [docID, setDocID] = React.useState(\"\");\r\n  const [title, setTitle] = React.useState(\"\");\r\n  const [income, setIncome] = React.useState(\"\");\r\n  const [date, setDate] = React.useState(new Date().toISOString().slice(0, 10));\r\n\r\n  const [isIncome, setIsIncome] = React.useState(\"income\");\r\n\r\n  const [activeItem, setActiveItem] = React.useState(\"\");\r\n  const [activeBalance, setActiveBalance] = React.useState(0);\r\n  const [posts, setPosts] = React.useState([]);\r\n  const [topAccounts, setTopAccounts] = React.useState([]);\r\n  React.useEffect(() => {\r\n    db.collection(\"topics\")\r\n      .where(\"prior\", \"<=\", \"3\")\r\n      .get()\r\n      .then((snapshot) => {\r\n        const data = snapshot.docs.map((doc) => {\r\n          return doc.data();\r\n        });\r\n        setTopAccounts(data);\r\n        console.log(data);\r\n      });\r\n\r\n    db.collection(\"posts\").onSnapshot((snapshot) => {\r\n      const data = snapshot.docs.map((doc) => {\r\n        return { ...doc.data(), id: doc.id };\r\n      });\r\n      setPosts(data);\r\n    });\r\n  }, []);\r\n\r\n  function saveRow() {\r\n    let row = {\r\n      title,\r\n      date\r\n    };\r\n    if(isIncome=='income'){\r\n      row.income = income;\r\n    }else{\r\n      row.expense = income;\r\n    }\r\n    \r\n    if (docID) {\r\n      db.collection(\"posts\")\r\n        .doc(docID)\r\n        .set(row)\r\n        .then(() => {\r\n          setDefalut();\r\n        });\r\n    } else {\r\n      db.collection(\"posts\")\r\n        .add(row)\r\n        .then(() => {\r\n          setDefalut();\r\n        });\r\n    }\r\n  }\r\n\r\n  function deleteRow() {\r\n    if (docID) {\r\n      db.collection(\"posts\")\r\n        .doc(docID)\r\n        .delete()\r\n        .then(() => {\r\n          console.log(\"add\");\r\n          setDefalut();\r\n        });\r\n    }\r\n  }\r\n\r\n  function setDefalut() {\r\n    setOpen(false);\r\n    setDocID(\"\");\r\n    setTitle(\"\");\r\n    setIncome(\"\");\r\n  }\r\n\r\n  function handleItemClick(e, { name }) {\r\n      setIsIncome(name)\r\n  }\r\n  return (\r\n    <>\r\n      <Header></Header>\r\n      <Container>\r\n        <Modal\r\n          closeIcon\r\n          open={open}\r\n          onClose={() => {\r\n            setOpen(false);\r\n            setDefalut();\r\n          }}\r\n        >\r\n          <Header>編輯收支</Header>\r\n          <Modal.Content>\r\n            <Menu fluid widths={2} pointing secondary  >\r\n              <Menu.Item \r\n              color='teal'\r\n              \r\n                name=\"income\"\r\n                active={isIncome === \"income\"}\r\n                onClick={handleItemClick}\r\n              >收入</Menu.Item>\r\n              <Menu.Item\r\n              color='orange'\r\n                name=\"expense\"\r\n                active={isIncome === \"expense\"}\r\n                onClick={handleItemClick}\r\n              >支出</Menu.Item>\r\n              \r\n            </Menu>\r\n            <Form size=\"large\">\r\n            <Form.Field>\r\n                <label>日期</label>\r\n                <input\r\n                type=\"date\"\r\n                  value={date}\r\n                  onChange={(e) => {\r\n                    setDate(e.target.value);\r\n                  }}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>項目</label>\r\n                <input\r\n                  value={title}\r\n                  onChange={(e) => {\r\n                    setTitle(e.target.value);\r\n                  }}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>金額</label>\r\n                <input\r\n                  type=\"number\"\r\n                  value={income}\r\n                  onChange={(e) => {\r\n                    setIncome(e.target.value);\r\n                  }}\r\n                />\r\n              </Form.Field>\r\n            </Form>\r\n          </Modal.Content>\r\n          <Modal.Actions>\r\n            {docID && <Button color=\"red\" floated=\"left\" onClick={deleteRow}>\r\n              <Icon name=\"remove\" />\r\n              Delete\r\n            </Button>}\r\n            \r\n            <Button color=\"green\" onClick={saveRow}>\r\n              <Icon name=\"check\" />\r\n              Save\r\n            </Button>\r\n          </Modal.Actions>\r\n        </Modal>\r\n        {/* 帳戶 */}\r\n        <Grid columns=\"equal\">\r\n          <Grid.Row>\r\n            {topAccounts.map((row, i) => {\r\n              return (\r\n                <Grid.Column key={i}>\r\n                  <Segment\r\n                    textAlign=\"center\"\r\n                    onClick={() => {\r\n                      setActiveItem(row.name);\r\n                      setActiveBalance(row.balance);\r\n                    }}\r\n                    color=\"teal\"\r\n                    inverted={activeItem === row.name}\r\n                  >\r\n                    {row.name}\r\n                  </Segment>\r\n                </Grid.Column>\r\n              );\r\n            })}\r\n          </Grid.Row>\r\n          {activeItem && (\r\n            <Grid.Row>\r\n              <Grid.Column>\r\n                <Statistic horizontal>\r\n                  <Statistic.Value>{numFormat(activeBalance)}</Statistic.Value>\r\n                  {/* <Statistic.Label>玉山</Statistic.Label> */}\r\n                </Statistic>\r\n              </Grid.Column>\r\n\r\n              <Grid.Column verticalAlign=\"middle\">\r\n                <Button\r\n                  floated=\"right\"\r\n                  color=\"blue\"\r\n                  onClick={() => {\r\n                    setOpen(true);\r\n                    // setIsIncome('income')\r\n                  }}\r\n                >\r\n                  <Icon name=\"plus\" /> Create\r\n                </Button>\r\n              </Grid.Column>\r\n            </Grid.Row>\r\n          )}\r\n          {/*資料表格*/}\r\n          <Grid.Row>\r\n            <Grid.Column>\r\n              {posts.map((row, i) => {\r\n                return (\r\n                  <Table key={i} unstackable>\r\n                    <Table.Body>\r\n                      <Table.Row\r\n                        onClick={() => {\r\n                          setOpen(true);\r\n                          setDocID(row.id);\r\n                          setTitle(row.title);\r\n                          setDate(row.date)\r\n                          if(row.income){\r\n                            setIsIncome('income')\r\n                            setIncome(row.income);\r\n                          }else{\r\n                            setIsIncome('expense')\r\n                            setIncome(row.expense);\r\n\r\n                          }\r\n                          \r\n                        }}\r\n                      >\r\n                        <Table.Cell>\r\n                          <Header as=\"h4\">{row.title}</Header>\r\n                          {row.date}\r\n                        </Table.Cell>\r\n                        <Table.Cell textAlign=\"right\">\r\n                          {row.income ? (\r\n                            <Label color=\"teal\" circular>\r\n                              存\r\n                            </Label>\r\n                          ) : (\r\n                            <Label color=\"orange\" circular>\r\n                              提\r\n                            </Label>\r\n                          )}\r\n                          <br></br>${\" \"}\r\n                          {row.income ? row.income : row.expense + \"\"}\r\n                        </Table.Cell>\r\n                      </Table.Row>\r\n                    </Table.Body>\r\n                  </Table>\r\n                );\r\n              })}\r\n            </Grid.Column>\r\n          </Grid.Row>\r\n        </Grid>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\nexport default Posts;\r\n","import { db } from \"../utils/firebase\";\r\nimport React from \"react\";\r\nimport { numFormat } from \"../utils/stringFormat\";\r\n\r\nimport {\r\n  Grid,\r\n  Label,\r\n  Icon,\r\n  Container,\r\n  Segment,\r\n  Menu,\r\n  Card,\r\n  List,\r\n  Button,\r\n  Table,\r\n  Header,\r\n  Statistic,\r\n  Modal,\r\n  Form,\r\n} from \"semantic-ui-react\";\r\nimport { auth } from \"../utils/firebase\";\r\n\r\nfunction Balances() {\r\n  const user = auth.currentUser;\r\n  // 編輯視窗顯示控制\r\n  const [open, setOpen] = React.useState(false);\r\n  // 資料欄位\r\n  const [docID, setDocID] = React.useState(\"\");\r\n  const [title, setTitle] = React.useState(\"\");\r\n  const [income, setIncome] = React.useState(\"\");\r\n  const [account, setAccount] = React.useState();\r\n  const [date, setDate] = React.useState(new Date().toISOString().slice(0, 10));\r\n  // 收支判斷\r\n  const [isIncome, setIsIncome] = React.useState(\"income\");\r\n  // 選取帳戶\r\n  const [activeAccount, setActiveAccount] = React.useState() || null;\r\n\r\n  const [activeItem, setActiveItem] = React.useState(\"\");\r\n  const [activeBalance, setActiveBalance] = React.useState(0);\r\n  const [balances, setBalances] = React.useState([]);\r\n  const [topAccounts, setTopAccounts] = React.useState([]);\r\n\r\n  React.useEffect(() => {\r\n    \r\n    // 收支資料\r\n    let colBalances = db.collection(\"balances\");\r\n    if (activeAccount) {\r\n      colBalances\r\n        .where(\"account.id\", \"==\", activeAccount.id)\r\n        .onSnapshot((snapshot) => {\r\n          const data = snapshot.docs.map((doc) => {\r\n            return { ...doc.data(), id: doc.id };\r\n          });\r\n          setBalances(data);\r\n        });\r\n    } else {\r\n      if (user) colBalances = colBalances.where(\"user\", \"==\", user.email);\r\n      colBalances.onSnapshot((snapshot) => {\r\n        const data = snapshot.docs.map((doc) => {\r\n          return { ...doc.data(), id: doc.id };\r\n        });\r\n        setBalances(data);\r\n      });\r\n    }\r\n    // 帳戶資料\r\n    let col = db.collection(\"accounts\");\r\n    if (user) col = col.where(\"user\", \"==\", user.email);\r\n    col.onSnapshot((snapshot) => {\r\n      const data = snapshot.docs.map((doc) => {\r\n        return { ...doc.data(), id: doc.id };\r\n      });\r\n      console.log(data)\r\n      setTopAccounts(data);\r\n    });\r\n  }, [activeAccount]);\r\n\r\n  function saveRow() {\r\n    let row = {\r\n      title,\r\n      date,\r\n    };\r\n    if (isIncome == \"income\") {\r\n      row.income = income;\r\n    } else {\r\n      row.expense = income;\r\n    }\r\n    if (account) {\r\n      row.account = account;\r\n    }\r\n\r\n    if (activeAccount) {\r\n      row.account = activeAccount;\r\n    }\r\n\r\n    if (user) {\r\n      row.user = user.email;\r\n    }\r\n\r\n    if (docID) {\r\n      db.collection(\"balances\")\r\n        .doc(docID)\r\n        .set(row)\r\n        .then(() => {\r\n          setDefalut();\r\n          if (isIncome == \"income\") updateBalance(income);\r\n          else updateBalance(income * -1);\r\n        });\r\n    } else {\r\n      db.collection(\"balances\")\r\n        .add(row)\r\n        .then(() => {\r\n          setDefalut();\r\n        });\r\n    }\r\n  }\r\n\r\n  // 更新帳戶餘額\r\n  function updateBalance(amt) {\r\n    const temp = activeBalance *1\r\n    db.collection(\"accounts\")\r\n      .doc(account.id)\r\n      .update({\r\n        balance: activeBalance * 1 + amt * 1,\r\n      }).then(()=>{\r\n        setActiveAccount(account)\r\n        // setActiveBalance(900)\r\n        console.log('ok')\r\n      });\r\n  }\r\n\r\n  function deleteRow() {\r\n    if (docID) {\r\n      db.collection(\"balances\")\r\n        .doc(docID)\r\n        .delete()\r\n        .then(() => {\r\n          console.log(\"add\");\r\n          setDefalut();\r\n        });\r\n    }\r\n  }\r\n\r\n  function setDefalut() {\r\n    setOpen(false);\r\n    setDocID(\"\");\r\n    setTitle(\"\");\r\n    setIncome(\"\");\r\n  }\r\n\r\n  function handleItemClick(e, { name }) {\r\n    setIsIncome(name);\r\n  }\r\n  return (\r\n    <>\r\n      <Header></Header>\r\n      <Container>\r\n        <Modal\r\n          closeIcon\r\n          open={open}\r\n          onClose={() => {\r\n            setOpen(false);\r\n            setDefalut();\r\n          }}\r\n        >\r\n          <Header>編輯收支</Header>\r\n          <Modal.Content>\r\n            <Menu fluid widths={2} pointing secondary>\r\n              <Menu.Item\r\n                color=\"teal\"\r\n                name=\"income\"\r\n                active={isIncome === \"income\"}\r\n                onClick={handleItemClick}\r\n              >\r\n                收入\r\n              </Menu.Item>\r\n              <Menu.Item\r\n                color=\"orange\"\r\n                name=\"expense\"\r\n                active={isIncome === \"expense\"}\r\n                onClick={handleItemClick}\r\n              >\r\n                支出\r\n              </Menu.Item>\r\n            </Menu>\r\n            <Form size=\"large\">\r\n              <Form.Field>\r\n                <label>日期</label>\r\n                <input\r\n                  type=\"date\"\r\n                  value={date}\r\n                  onChange={(e) => {\r\n                    setDate(e.target.value);\r\n                  }}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>項目</label>\r\n                <input\r\n                  value={title}\r\n                  onChange={(e) => {\r\n                    setTitle(e.target.value);\r\n                  }}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>金額</label>\r\n                <input\r\n                  type=\"number\"\r\n                  value={income}\r\n                  onChange={(e) => {\r\n                    setIncome(e.target.value);\r\n                  }}\r\n                />\r\n              </Form.Field>\r\n            </Form>\r\n          </Modal.Content>\r\n          <Modal.Actions>\r\n            {docID && (\r\n              <Button color=\"red\" floated=\"left\" onClick={deleteRow}>\r\n                <Icon name=\"remove\" />\r\n                Delete\r\n              </Button>\r\n            )}\r\n\r\n            <Button color=\"green\" onClick={saveRow}>\r\n              <Icon name=\"check\" />\r\n              Save\r\n            </Button>\r\n          </Modal.Actions>\r\n        </Modal>\r\n        {/* 帳戶 */}\r\n        <Grid columns=\"equal\">\r\n          <Grid.Row>\r\n            {topAccounts.map((row, i) => {\r\n              return (\r\n                <Grid.Column key={i}>\r\n                  <Segment\r\n                    textAlign=\"center\"\r\n                    onClick={() => {\r\n                      setActiveItem(row.name);\r\n                      setActiveBalance(row.balance);\r\n                      setActiveAccount(row);\r\n                    }}\r\n                    color=\"teal\"\r\n                    inverted={activeItem === row.name}\r\n                  >\r\n                    {row.name}\r\n                  </Segment>\r\n                </Grid.Column>\r\n              );\r\n            })}\r\n          </Grid.Row>\r\n          {activeItem && (\r\n            <Grid.Row>\r\n              <Grid.Column>\r\n                <Statistic horizontal>\r\n                  <Statistic.Value>\r\n                    {numFormat(topAccounts.filter(account=>account.id==activeAccount.id)[0].balance)}\r\n                    {/* {numFormat(activeAccount.balance)} */}\r\n                    {/* {topAccounts[0].balance} */}\r\n                  </Statistic.Value>\r\n                  {/* <Statistic.Label>玉山</Statistic.Label> */}\r\n                </Statistic>\r\n              </Grid.Column>\r\n\r\n              <Grid.Column verticalAlign=\"middle\">\r\n                <Button\r\n                  floated=\"right\"\r\n                  color=\"blue\"\r\n                  onClick={() => {\r\n                    setOpen(true);\r\n                    // setIsIncome('income')\r\n                  }}\r\n                >\r\n                  <Icon name=\"plus\" /> Create\r\n                </Button>\r\n              </Grid.Column>\r\n            </Grid.Row>\r\n          )}\r\n          {/*資料表格*/}\r\n          <Grid.Row>\r\n            <Grid.Column>\r\n              {balances.map((row, i) => {\r\n                return (\r\n                  <Table key={i} unstackable>\r\n                    <Table.Body>\r\n                      <Table.Row\r\n                        onClick={() => {\r\n                          setOpen(true);\r\n                          setDocID(row.id);\r\n                          setTitle(row.title);\r\n                          setDate(row.date);\r\n                          setAccount(row.account);\r\n\r\n                          if (row.income) {\r\n                            setIsIncome(\"income\");\r\n                            setIncome(row.income);\r\n                          } else {\r\n                            setIsIncome(\"expense\");\r\n                            setIncome(row.expense);\r\n                          }\r\n                        }}\r\n                      >\r\n                        <Table.Cell>\r\n                          <Header as=\"h4\">{row.title}</Header>\r\n                          <span>{row.date} </span>\r\n                          {!activeAccount && (\r\n                            <Label>{row.account && row.account.name}</Label>\r\n                          )}\r\n                        </Table.Cell>\r\n                        <Table.Cell textAlign=\"right\">\r\n                          {row.income ? (\r\n                            <Label color=\"teal\" circular>\r\n                              存\r\n                            </Label>\r\n                          ) : (\r\n                            <Label color=\"orange\" circular>\r\n                              提\r\n                            </Label>\r\n                          )}\r\n                          <br></br>${\" \"}\r\n                          {row.income\r\n                            ? numFormat(row.income)\r\n                            : numFormat(row.expense) + \"\"}\r\n                        </Table.Cell>\r\n                      </Table.Row>\r\n                    </Table.Body>\r\n                  </Table>\r\n                );\r\n              })}\r\n            </Grid.Column>\r\n          </Grid.Row>\r\n        </Grid>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Balances;\r\n","import {\r\n  Form,\r\n  Modal,\r\n  Container,\r\n  Button,\r\n  Grid,\r\n  Segment,\r\n} from \"semantic-ui-react\";\r\nimport React from \"react\";\r\nimport { auth } from \"../utils/firebase\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default function Login() {\r\n    const history = useHistory()\r\n  const email = React.useRef();\r\n  const password = React.useRef();\r\n  return (\r\n    <Container>\r\n      <Grid columns={3}>\r\n        <Grid.Row>\r\n          <Grid.Column mobile={16} tablet={3} computer={5}></Grid.Column>\r\n          <Grid.Column mobile={16} tablet={10} computer={6}>\r\n            <Segment>\r\n              <Form size=\"large\">\r\n                <Form.Field>\r\n                  <label>Email</label>\r\n                  <input ref={email} defaultValue=\"mkdodos@gmail.com\"></input>\r\n                </Form.Field>\r\n                <Form.Field>\r\n                  <label>Password</label>\r\n                  <input ref={password} defaultValue=\"123456\"></input>\r\n                </Form.Field>\r\n                <Button\r\n                  onClick={() => {\r\n                    auth\r\n                      .signInWithEmailAndPassword(\r\n                        email.current.value,\r\n                        password.current.value\r\n                      )\r\n                      .then((userCrendential) => {\r\n                        history.push('/user')\r\n                        console.log(userCrendential.user.email);\r\n                      });\r\n                    // console.log(password.current.value);\r\n                  }}\r\n                  size=\"large\"\r\n                  color=\"blue\"\r\n                >\r\n                  Mark\r\n                </Button>\r\n                <Button\r\n                  basic\r\n                  floated=\"right\"\r\n                  onClick={() => {\r\n                    auth\r\n                      .signInWithEmailAndPassword(\"dada@gmail.com\", \"123456\")\r\n                      .then((userCrendential) => {\r\n                        console.log(userCrendential.user.email);\r\n                        history.push('/user')\r\n                      });\r\n                  }}\r\n                  size=\"large\"\r\n                  color=\"blue\"\r\n                >\r\n                  Dada\r\n                </Button>\r\n              </Form>\r\n            </Segment>\r\n          </Grid.Column>\r\n          <Grid.Column mobile={16} tablet={3} computer={5}></Grid.Column>\r\n        </Grid.Row>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n}\r\n","import {\r\n  Container,\r\n  Grid,\r\n  Segment,\r\n  Statistic,\r\n  Dropdown,\r\n} from \"semantic-ui-react\";\r\nimport { db, auth } from \"../utils/firebase\";\r\nimport React from \"react\";\r\nimport { numFormat } from \"../utils/stringFormat\";\r\nfunction Dashboard() {\r\n  const months = [];\r\n  // const i = \"5\"\r\n  for (let i = 1; i <= 12; i++){\r\n    let num = i;\r\n    if(i<=9)num='0'+i\r\n    months.push({\r\n      key: num,\r\n      text: num,\r\n      value: num,\r\n    });\r\n    console.log(num)\r\n  }\r\n  \r\n   \r\n  const user = auth.currentUser;\r\n  const [total, setTotal] = React.useState({});\r\n  const [month, setMonth] = React.useState();\r\n  //   const m = \"07\"\r\n  React.useEffect(() => {\r\n    db.collection(\"balances\")\r\n      .where(\"user\", \"==\", user.email)\r\n      .where(\"date\", \">=\", `2022-${month}-01`)\r\n      .where(\"date\", \"<=\", `2022-${month}-31`)\r\n      .get()\r\n      .then((snapshot) => {\r\n        let income = 0;\r\n        let expense = 0;\r\n        snapshot.docs.map((doc) => {\r\n          if (doc.data().income) income += doc.data().income * 1;\r\n          if (doc.data().expense) expense += doc.data().expense * 1;\r\n        });\r\n        setTotal({ income: income, expense: expense });\r\n      });\r\n  }, [month]);\r\n  return (\r\n    <Container>\r\n      <Dropdown\r\n        selection\r\n        value={month}\r\n        placeholder=\"順位\"\r\n        options={months}\r\n        onChange={(e, obj) => {\r\n          setMonth(obj.value);\r\n        }}\r\n      ></Dropdown>\r\n      <Grid columns={1}>\r\n        <Grid.Row stretched>\r\n          <Grid.Column textAlign=\"center\">\r\n            <Segment color=\"teal\">\r\n              <Statistic>\r\n                <Statistic.Label>本月收入</Statistic.Label>\r\n                <Statistic.Value>{numFormat(total.income)}</Statistic.Value>\r\n              </Statistic>\r\n            </Segment>\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n        <Grid.Row stretched>\r\n          <Grid.Column textAlign=\"center\">\r\n            <Segment color=\"orange\">\r\n              <Statistic>\r\n                <Statistic.Label>本月支出</Statistic.Label>\r\n                <Statistic.Value>{numFormat(total.expense)}</Statistic.Value>\r\n              </Statistic>\r\n            </Segment>\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Dashboard;\r\n","import { auth } from \"../utils/firebase\";\r\nimport { Button, Container, Card, Image, Icon, Grid,Modal,Header,Form } from \"semantic-ui-react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport sea from \"../images/avatar/large/matthew.png\";\r\nimport girl from \"../images/avatar/large/kristy.png\";\r\nimport React from \"react\";\r\nexport default function User() {\r\n  const history = useHistory();\r\n  const user = auth.currentUser;\r\n  // 編輯視窗顯示控制\r\n  const [open, setOpen] = React.useState(false);\r\n    // 資料欄位\r\n  const [name, setName] = React.useState(\"\");\r\n  function saveRow() {\r\n    const row = {\r\n      displayName: name,\r\n    };\r\n    user.updateProfile(row).then(()=>{\r\n      setOpen(false)\r\n    });\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <Modal\r\n        closeIcon\r\n        open={open}\r\n        onClose={() => {\r\n          setOpen(false);\r\n        }}\r\n      >\r\n        <Header>編輯帳戶</Header>\r\n        <Modal.Content>\r\n          <Form size=\"large\">\r\n            <Form.Field>\r\n              <label>名稱</label>\r\n              <input\r\n                value={name}\r\n                onChange={(e) => {\r\n                  setName(e.target.value);\r\n                }}\r\n              />\r\n            </Form.Field>\r\n          </Form>\r\n        </Modal.Content>\r\n        <Modal.Actions>\r\n          <Button color=\"green\" onClick={saveRow}>\r\n            <Icon name=\"check\" />\r\n            Save\r\n          </Button>\r\n        </Modal.Actions>\r\n      </Modal>\r\n      <Grid centered>\r\n        <Grid.Row columns={3}>\r\n          <Grid.Column mobile={1} tablet={3} computer={5}>\r\n            {/* <Image size='tiny' src={user?.email=='mkdodos@gmail.com'?sea:girl} wrapped ui={false} /> */}\r\n          </Grid.Column>\r\n          <Grid.Column mobile={13} tablet={10} computer={6}>\r\n            <Card fluid>\r\n              <Image\r\n                src={user?.email == \"mkdodos@gmail.com\" ? sea : girl}\r\n                size=\"large\"\r\n              />\r\n              <Card.Content>\r\n                <Card.Header>{user?.displayName}</Card.Header>\r\n                <Card.Meta>\r\n                  <span className=\"date\">Joined in 2015</span>\r\n                </Card.Meta>\r\n                <Card.Description>{user && user.email}</Card.Description>\r\n              </Card.Content>\r\n              <Card.Content extra>\r\n                <Button\r\n                  onClick={() => {\r\n                    auth.signOut().then(() => {\r\n                      history.push(\"/login\");\r\n                    });\r\n                  }}\r\n                >\r\n                  SignOut\r\n                </Button>\r\n                <Button\r\n                  onClick={() => {\r\n                    setOpen(true)\r\n                  }}\r\n                >\r\n                  Edit\r\n                </Button>\r\n              </Card.Content>\r\n            </Card>\r\n          </Grid.Column>\r\n          <Grid.Column mobile={1} tablet={3} computer={5}>\r\n            {/* <Image src=\"/images/wireframe/image.png\" /> */}\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n}\r\n","import Header from \"./Header\";\r\nimport Accounts from \"./components/Accounts\";\r\nimport {\r\n  BrowserRouter,\r\n  Route,\r\n  Link,\r\n  Switch,\r\n  useHistory,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\nimport Posts from \"./components/Posts\";\r\nimport Balances from \"./components/Balances\";\r\nimport Login from \"./components/Login\";\r\nimport Dashboard from \"./components/Dashboard\";\r\nimport User from \"./components/User\";\r\nimport { auth } from \"./utils/firebase\";\r\nimport React from \"react\";\r\n\r\nfunction App() {\r\n  const [user, setUser] = React.useState(null);\r\n  React.useEffect(() => {\r\n    auth.onAuthStateChanged((currUser) => {\r\n      setUser(currUser);\r\n    });\r\n  }, []);\r\n \r\n  return (\r\n    <>\r\n      <BrowserRouter>\r\n        <Header></Header>\r\n        <Switch>\r\n          <Route path=\"/accounts\">\r\n            {/* 要有登入才能查看此頁,沒有登入時導向登入頁 */}\r\n            {user ? <Accounts /> : <Redirect to=\"login\" />}\r\n          </Route>\r\n          <Route path=\"/balances\">            \r\n            {user ? <Balances /> : <Redirect to=\"login\" />}\r\n          </Route>\r\n          <Route path=\"/dashboard\">            \r\n            {user ? <Dashboard /> : <Redirect to=\"login\" />}\r\n          </Route>\r\n          {/* <Route path=\"/accounts\" component={Accounts}></Route> */}\r\n          {/* <Route path=\"/balances\" component={Balances}></Route> */}\r\n          <Route path=\"/login\" component={Login}></Route>\r\n          <Route path=\"/user\" component={User}></Route>\r\n          <Route path=\"/posts\" component={Posts}></Route>\r\n        </Switch>\r\n      </BrowserRouter>\r\n      {/* <Container>\r\n        <Topics />\r\n        <Posts />\r\n      </Container> */}\r\n    </>\r\n  );\r\n}\r\nexport default App;\r\n","import ReactDom from 'react-dom'\r\nimport App from './App';\r\nimport 'semantic-ui-css/semantic.min.css'\r\n\r\nconst container = document.getElementById('root');\r\nReactDom.render(<App/>,container)"],"sourceRoot":""}