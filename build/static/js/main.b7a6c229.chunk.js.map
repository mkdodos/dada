{"version":3,"sources":["utils/firebase.js","Header.js","utils/stringFormat.js","components/Accounts.js","components/Posts.js","components/Balances.js","components/Login.js","components/User.js","App.js","index.js"],"names":["app","firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","db","firestore","auth","Header","history","useHistory","React","useState","activeItem","setActiveItem","user","setUser","handleClick","e","name","useEffect","onAuthStateChanged","currUser","Menu","secondary","pointing","widths","Item","as","Link","to","onClick","active","position","signOut","then","push","numFormat","total","Intl","NumberFormat","currency","format","Accounts","currentUser","open","setOpen","docID","setDocID","setName","balance","setBalance","prior","setPrior","gridRows","setGridRows","setDefalut","col","collection","where","email","onSnapshot","snapshot","rows","docs","map","doc","data","id","grid","i","columns","length","Grid","Column","Segment","textAlign","Label","attached","Row","row","color","Container","className","Modal","closeIcon","onClose","Content","Form","size","Field","value","onChange","target","placeholder","type","Dropdown","selection","options","key","text","obj","Actions","Button","floated","delete","Icon","createdAt","Timestamp","now","update","add","Posts","title","setTitle","income","setIncome","Date","toISOString","slice","date","setDate","isIncome","setIsIncome","activeBalance","setActiveBalance","posts","setPosts","topAccounts","setTopAccounts","handleItemClick","get","console","log","fluid","expense","set","inverted","Statistic","horizontal","Value","verticalAlign","Table","unstackable","Body","Cell","circular","Balances","account","setAccount","activeAccount","setActiveAccount","balances","setBalances","Login","useRef","password","mobile","tablet","computer","ref","defaultValue","signInWithEmailAndPassword","current","userCrendential","basic","App","path","component","User","container","document","getElementById","ReactDom","render"],"mappings":"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","file":"static/js/main.b7a6c229.chunk.js","sourcesContent":["import firebase from 'firebase/app'\r\nimport 'firebase/firestore'\r\nimport \"firebase/auth\"\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\r\n    authDomain: \"social-cool-f16ba.firebaseapp.com\",\r\n    projectId: \"social-cool-f16ba\",\r\n    storageBucket: \"social-cool-f16ba.appspot.com\",\r\n    messagingSenderId: \"578558980743\",\r\n    appId: \"1:578558980743:web:4668ba80e8df3c24087e22\"\r\n  };\r\n\r\n const app = firebase.initializeApp(firebaseConfig)\r\n  const db = firebase.firestore()\r\n\r\n const auth = app.auth()\r\n\r\n  export default firebase\r\n  export {db,auth}","import React from \"react\";\r\nimport { Menu, Icon } from \"semantic-ui-react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { auth } from \"./utils/firebase\";\r\nimport { useHistory } from \"react-router-dom\";\r\nfunction Header() {\r\n  // const user = auth.currentUser;\r\n  const history = useHistory();\r\n  const [activeItem, setActiveItem] = React.useState(\"\");\r\n  const [user, setUser] = React.useState(null);\r\n  React.useEffect(() => {\r\n    auth.onAuthStateChanged((currUser) => {\r\n      setUser(currUser);\r\n    });\r\n  }, []);\r\n\r\n  function handleClick(e, { name }) {\r\n    setActiveItem(name);\r\n  }\r\n  return (\r\n    <Menu secondary pointing widths={4}>\r\n      <Menu.Item\r\n        as={Link}\r\n        to=\"/accounts\"\r\n        name=\"accounts\"\r\n        onClick={handleClick}\r\n        active={activeItem === \"accounts\"}\r\n      >\r\n        {/* <Icon name=\"user\" disabled={activeItem !== \"home\"} /> */}\r\n        帳戶\r\n      </Menu.Item>\r\n      <Menu.Item\r\n        as={Link}\r\n        to=\"/balances\"\r\n        name=\"balances\"\r\n        onClick={handleClick}\r\n        active={activeItem === \"balances\"}\r\n      >\r\n        收支\r\n      </Menu.Item>\r\n\r\n      <Menu.Menu position=\"right\">\r\n        {user ? (\r\n          <Menu.Item\r\n            name=\"logout\"\r\n            onClick={() => {\r\n              auth.signOut().then(() => {\r\n                history.push(\"/login\");\r\n              });\r\n            }}\r\n          />\r\n        ) : (\r\n          <Menu.Item\r\n            name=\"login\"\r\n            as={Link}\r\n            to=\"/login\"\r\n            onClick={handleClick}\r\n           \r\n          >\r\n            Login\r\n          </Menu.Item>\r\n        )}\r\n      </Menu.Menu>\r\n    </Menu>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","const numFormat = function numberFormat(total) {\r\n  var formatter = new Intl.NumberFormat(\"en-US\", {\r\n    currency: \"USD\", // 2,500\r\n   /* style: \"currency\"  $2,500.00 */\r\n  });\r\n  return formatter.format(total);\r\n};\r\n\r\nexport { numFormat };\r\n","import React from \"react\";\r\nimport {\r\n  Grid,\r\n  Segment,\r\n  Label,\r\n  Header,\r\n  Button,\r\n  Icon,\r\n  Modal,\r\n  Form,\r\n  Dropdown,\r\n  Container,\r\n} from \"semantic-ui-react\";\r\nimport firebase, { db } from \"../utils/firebase\";\r\nimport { numFormat } from \"../utils/stringFormat\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { auth } from \"../utils/firebase\";\r\n\r\nexport default function Accounts() {\r\n  const user = auth.currentUser;\r\n  // 編輯視窗顯示控制\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  // 資料欄位\r\n  //  { name: \"土地銀行1\", balance: \"908\", prior: \"1\" },\r\n  const [docID, setDocID] = React.useState(\"\");\r\n  const [name, setName] = React.useState(\"\");\r\n  const [balance, setBalance] = React.useState(\"\");\r\n  const [prior, setPrior] = React.useState(\"\");\r\n\r\n  // 區塊顯示\r\n  const [gridRows, setGridRows] = React.useState([]);\r\n\r\n  React.useEffect(() => {\r\n    let col = db.collection(\"accounts\");\r\n    // col.orderBy(\"prior\");\r\n    if (user) col = col.where(\"user\", \"==\", user.email);\r\n    // col=col.where(\"name\",\"==\",\"晚\")\r\n    col = col.onSnapshot((snapshot) => {\r\n      const rows = snapshot.docs.map((doc) => {\r\n        return { ...doc.data(), id: doc.id };\r\n      });\r\n\r\n      const grid = [];\r\n      let i = 0;\r\n      let columns = [];\r\n      // 沒有資料時,顯示新增鈕\r\n      if (rows.length == 0) {\r\n        columns.push(\r\n          <Grid.Column key=\"0\">\r\n            <Segment\r\n              textAlign=\"center\"\r\n              onClick={() => {\r\n                setOpen(true);\r\n              }}\r\n            >\r\n              <Label attached=\"top\">新增</Label>\r\n\r\n              <Header>+</Header>\r\n            </Segment>\r\n          </Grid.Column>\r\n        );\r\n        grid.push(<Grid.Row key={i}>{columns}</Grid.Row>);\r\n      }\r\n      for (let row of rows) {\r\n        // 資料區塊最前面放置新增鈕\r\n        if (i == 0) {\r\n          columns.push(\r\n            <Grid.Column key=\"0\">\r\n              <Segment\r\n                textAlign=\"center\"\r\n                onClick={() => {\r\n                  setOpen(true);\r\n                }}\r\n              >\r\n                <Label attached=\"top\">新增</Label>\r\n                <Header>+</Header>\r\n              </Segment>\r\n            </Grid.Column>\r\n          );\r\n        }\r\n        // 資料區塊\r\n        columns.push(\r\n          <Grid.Column key={i + 1}>\r\n            <Segment\r\n              textAlign=\"center\"\r\n              onClick={() => {\r\n                setOpen(true);\r\n                setDocID(row.id);\r\n                setName(row.name);\r\n                setPrior(row.prior);\r\n                setBalance(row.balance);\r\n              }}\r\n            >\r\n              <Label color=\"teal\" attached=\"top\">\r\n                {row.name}\r\n              </Label>\r\n              <Header>{numFormat(row.balance)}</Header>\r\n            </Segment>\r\n          </Grid.Column>\r\n        );\r\n        // 每列3筆區塊\r\n        // i = 1,4,7... 或最後一筆時加入一列\r\n        // + 0 1\r\n        // 2 3 4\r\n        // 5 6\r\n        if (i % 3 == 1 || i == rows.length - 1) {\r\n          grid.push(<Grid.Row key={i}>{columns}</Grid.Row>);\r\n          columns = [];\r\n        }\r\n\r\n        i++;\r\n      }\r\n      setGridRows(grid);\r\n    });\r\n  }, []);\r\n\r\n  function saveRow() {\r\n    const row = {\r\n      name: name,\r\n      balance: balance,\r\n      prior,\r\n      user: user.email,\r\n      createdAt: firebase.firestore.Timestamp.now(),\r\n    }\r\n    if (docID) {\r\n      db.collection(\"accounts\").doc(docID).update(row);\r\n    } else {\r\n      db.collection(\"accounts\").add(row);\r\n    }\r\n\r\n    setDefalut();\r\n  }\r\n\r\n  function deleteRow() {\r\n    if (docID) {\r\n      db.collection(\"accounts\")\r\n        .doc(docID)\r\n        .delete()\r\n        .then(() => {\r\n          setDefalut();\r\n        });\r\n    }\r\n  }\r\n\r\n  function setDefalut() {\r\n    setOpen(false);\r\n    setName(\"\");\r\n    setBalance(\"\");\r\n    setPrior(\"\");\r\n  }\r\n\r\n  const friendOptions = [\r\n    {\r\n      key: \"1\",\r\n      text: \"1\",\r\n      value: \"1\",\r\n    },\r\n    {\r\n      key: \"2\",\r\n      text: \"2\",\r\n      value: \"2\",\r\n    },\r\n    {\r\n      key: \"3\",\r\n      text: \"3\",\r\n      value: \"3\",\r\n    },\r\n    {\r\n      key: \"4\",\r\n      text: \"4\",\r\n      value: \"4\",\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <Container>\r\n        {user && user.email}\r\n        <div className=\"App\">\r\n          <Grid columns={3}>{gridRows}</Grid>\r\n        </div>\r\n\r\n        <Modal\r\n          closeIcon\r\n          open={open}\r\n          onClose={() => {\r\n            setOpen(false);\r\n            setDefalut();\r\n          }}\r\n        >\r\n          <Header>編輯帳戶</Header>\r\n          <Modal.Content>\r\n            <Form size=\"large\">\r\n              <Form.Field>\r\n                <label>帳戶名稱</label>\r\n                <input\r\n                  value={name}\r\n                  onChange={(e) => {\r\n                    setName(e.target.value);\r\n                  }}\r\n                  placeholder=\"please enter your name\"\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>餘額</label>\r\n                <input\r\n                  type=\"number\"\r\n                  value={balance}\r\n                  onChange={(e) => {\r\n                    setBalance(e.target.value);\r\n                  }}\r\n                  placeholder=\"please enter your amount\"\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>順位</label>\r\n                <Dropdown\r\n                  selection\r\n                  value={prior}\r\n                  placeholder=\"順位\"\r\n                  options={friendOptions}\r\n                  onChange={(e, obj) => {\r\n                    setPrior(obj.value);\r\n                  }}\r\n                ></Dropdown>\r\n              </Form.Field>\r\n            </Form>\r\n          </Modal.Content>\r\n          <Modal.Actions>\r\n            <Button color=\"red\" floated=\"left\" onClick={deleteRow}>\r\n              <Icon name=\"remove\" />\r\n              Delete\r\n            </Button>\r\n            <Button color=\"green\" onClick={saveRow}>\r\n              <Icon name=\"check\" />\r\n              Save\r\n            </Button>\r\n          </Modal.Actions>\r\n        </Modal>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n","import { db } from \"../utils/firebase\";\r\nimport React from \"react\";\r\nimport { numFormat } from \"../utils/stringFormat\";\r\n\r\nimport {\r\n  Grid,\r\n  Label,\r\n  Icon,\r\n  Container,\r\n  Segment,\r\n  Menu,\r\n  Card,\r\n  List,\r\n  Button,\r\n  Table,\r\n  Header,\r\n  Statistic,\r\n  Modal,\r\n  Form,\r\n} from \"semantic-ui-react\";\r\nfunction Posts() {\r\n  const rows = [\r\n    { name: \"現金\", amt: \"678\", date: \"2022-09-01\" },\r\n    { name: \"信用卡\", amt: \"4,567\", date: \"2022-01-08\" },\r\n    { name: \"玉山\", amt: \"908\", date: \"2022-10-22\" },\r\n    { name: \"中國信託\", amt: \"908\", date: \"2022-10-22\" },\r\n  ];\r\n  // 編輯視窗顯示控制\r\n  const [open, setOpen] = React.useState(false);\r\n  // 資料欄位\r\n  const [docID, setDocID] = React.useState(\"\");\r\n  const [title, setTitle] = React.useState(\"\");\r\n  const [income, setIncome] = React.useState(\"\");\r\n  const [date, setDate] = React.useState(new Date().toISOString().slice(0, 10));\r\n\r\n  const [isIncome, setIsIncome] = React.useState(\"income\");\r\n\r\n  const [activeItem, setActiveItem] = React.useState(\"\");\r\n  const [activeBalance, setActiveBalance] = React.useState(0);\r\n  const [posts, setPosts] = React.useState([]);\r\n  const [topAccounts, setTopAccounts] = React.useState([]);\r\n  React.useEffect(() => {\r\n    db.collection(\"topics\")\r\n      .where(\"prior\", \"<=\", \"3\")\r\n      .get()\r\n      .then((snapshot) => {\r\n        const data = snapshot.docs.map((doc) => {\r\n          return doc.data();\r\n        });\r\n        setTopAccounts(data);\r\n        console.log(data);\r\n      });\r\n\r\n    db.collection(\"posts\").onSnapshot((snapshot) => {\r\n      const data = snapshot.docs.map((doc) => {\r\n        return { ...doc.data(), id: doc.id };\r\n      });\r\n      setPosts(data);\r\n    });\r\n  }, []);\r\n\r\n  function saveRow() {\r\n    let row = {\r\n      title,\r\n      date\r\n    };\r\n    if(isIncome=='income'){\r\n      row.income = income;\r\n    }else{\r\n      row.expense = income;\r\n    }\r\n    \r\n    if (docID) {\r\n      db.collection(\"posts\")\r\n        .doc(docID)\r\n        .set(row)\r\n        .then(() => {\r\n          setDefalut();\r\n        });\r\n    } else {\r\n      db.collection(\"posts\")\r\n        .add(row)\r\n        .then(() => {\r\n          setDefalut();\r\n        });\r\n    }\r\n  }\r\n\r\n  function deleteRow() {\r\n    if (docID) {\r\n      db.collection(\"posts\")\r\n        .doc(docID)\r\n        .delete()\r\n        .then(() => {\r\n          console.log(\"add\");\r\n          setDefalut();\r\n        });\r\n    }\r\n  }\r\n\r\n  function setDefalut() {\r\n    setOpen(false);\r\n    setDocID(\"\");\r\n    setTitle(\"\");\r\n    setIncome(\"\");\r\n  }\r\n\r\n  function handleItemClick(e, { name }) {\r\n      setIsIncome(name)\r\n  }\r\n  return (\r\n    <>\r\n      <Header></Header>\r\n      <Container>\r\n        <Modal\r\n          closeIcon\r\n          open={open}\r\n          onClose={() => {\r\n            setOpen(false);\r\n            setDefalut();\r\n          }}\r\n        >\r\n          <Header>編輯收支</Header>\r\n          <Modal.Content>\r\n            <Menu fluid widths={2} pointing secondary  >\r\n              <Menu.Item \r\n              color='teal'\r\n              \r\n                name=\"income\"\r\n                active={isIncome === \"income\"}\r\n                onClick={handleItemClick}\r\n              >收入</Menu.Item>\r\n              <Menu.Item\r\n              color='orange'\r\n                name=\"expense\"\r\n                active={isIncome === \"expense\"}\r\n                onClick={handleItemClick}\r\n              >支出</Menu.Item>\r\n              \r\n            </Menu>\r\n            <Form size=\"large\">\r\n            <Form.Field>\r\n                <label>日期</label>\r\n                <input\r\n                type=\"date\"\r\n                  value={date}\r\n                  onChange={(e) => {\r\n                    setDate(e.target.value);\r\n                  }}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>項目</label>\r\n                <input\r\n                  value={title}\r\n                  onChange={(e) => {\r\n                    setTitle(e.target.value);\r\n                  }}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>金額</label>\r\n                <input\r\n                  type=\"number\"\r\n                  value={income}\r\n                  onChange={(e) => {\r\n                    setIncome(e.target.value);\r\n                  }}\r\n                />\r\n              </Form.Field>\r\n            </Form>\r\n          </Modal.Content>\r\n          <Modal.Actions>\r\n            {docID && <Button color=\"red\" floated=\"left\" onClick={deleteRow}>\r\n              <Icon name=\"remove\" />\r\n              Delete\r\n            </Button>}\r\n            \r\n            <Button color=\"green\" onClick={saveRow}>\r\n              <Icon name=\"check\" />\r\n              Save\r\n            </Button>\r\n          </Modal.Actions>\r\n        </Modal>\r\n        {/* 帳戶 */}\r\n        <Grid columns=\"equal\">\r\n          <Grid.Row>\r\n            {topAccounts.map((row, i) => {\r\n              return (\r\n                <Grid.Column key={i}>\r\n                  <Segment\r\n                    textAlign=\"center\"\r\n                    onClick={() => {\r\n                      setActiveItem(row.name);\r\n                      setActiveBalance(row.balance);\r\n                    }}\r\n                    color=\"teal\"\r\n                    inverted={activeItem === row.name}\r\n                  >\r\n                    {row.name}\r\n                  </Segment>\r\n                </Grid.Column>\r\n              );\r\n            })}\r\n          </Grid.Row>\r\n          {activeItem && (\r\n            <Grid.Row>\r\n              <Grid.Column>\r\n                <Statistic horizontal>\r\n                  <Statistic.Value>{numFormat(activeBalance)}</Statistic.Value>\r\n                  {/* <Statistic.Label>玉山</Statistic.Label> */}\r\n                </Statistic>\r\n              </Grid.Column>\r\n\r\n              <Grid.Column verticalAlign=\"middle\">\r\n                <Button\r\n                  floated=\"right\"\r\n                  color=\"blue\"\r\n                  onClick={() => {\r\n                    setOpen(true);\r\n                    // setIsIncome('income')\r\n                  }}\r\n                >\r\n                  <Icon name=\"plus\" /> Create\r\n                </Button>\r\n              </Grid.Column>\r\n            </Grid.Row>\r\n          )}\r\n          {/*資料表格*/}\r\n          <Grid.Row>\r\n            <Grid.Column>\r\n              {posts.map((row, i) => {\r\n                return (\r\n                  <Table key={i} unstackable>\r\n                    <Table.Body>\r\n                      <Table.Row\r\n                        onClick={() => {\r\n                          setOpen(true);\r\n                          setDocID(row.id);\r\n                          setTitle(row.title);\r\n                          setDate(row.date)\r\n                          if(row.income){\r\n                            setIsIncome('income')\r\n                            setIncome(row.income);\r\n                          }else{\r\n                            setIsIncome('expense')\r\n                            setIncome(row.expense);\r\n\r\n                          }\r\n                          \r\n                        }}\r\n                      >\r\n                        <Table.Cell>\r\n                          <Header as=\"h4\">{row.title}</Header>\r\n                          {row.date}\r\n                        </Table.Cell>\r\n                        <Table.Cell textAlign=\"right\">\r\n                          {row.income ? (\r\n                            <Label color=\"teal\" circular>\r\n                              存\r\n                            </Label>\r\n                          ) : (\r\n                            <Label color=\"orange\" circular>\r\n                              提\r\n                            </Label>\r\n                          )}\r\n                          <br></br>${\" \"}\r\n                          {row.income ? row.income : row.expense + \"\"}\r\n                        </Table.Cell>\r\n                      </Table.Row>\r\n                    </Table.Body>\r\n                  </Table>\r\n                );\r\n              })}\r\n            </Grid.Column>\r\n          </Grid.Row>\r\n        </Grid>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\nexport default Posts;\r\n","import { db } from \"../utils/firebase\";\r\nimport React from \"react\";\r\nimport { numFormat } from \"../utils/stringFormat\";\r\n\r\nimport {\r\n  Grid,\r\n  Label,\r\n  Icon,\r\n  Container,\r\n  Segment,\r\n  Menu,\r\n  Card,\r\n  List,\r\n  Button,\r\n  Table,\r\n  Header,\r\n  Statistic,\r\n  Modal,\r\n  Form,\r\n} from \"semantic-ui-react\";\r\nfunction Balances() {\r\n  // 編輯視窗顯示控制\r\n  const [open, setOpen] = React.useState(false);\r\n  // 資料欄位\r\n  const [docID, setDocID] = React.useState(\"\");\r\n  const [title, setTitle] = React.useState(\"\");\r\n  const [income, setIncome] = React.useState(\"\");\r\n  const [account, setAccount] = React.useState();\r\n  const [date, setDate] = React.useState(new Date().toISOString().slice(0, 10));\r\n  // 收支判斷\r\n  const [isIncome, setIsIncome] = React.useState(\"income\");\r\n  // 選取帳戶\r\n  const [activeAccount, setActiveAccount] = React.useState() || null;\r\n\r\n  const [activeItem, setActiveItem] = React.useState(\"\");\r\n  const [activeBalance, setActiveBalance] = React.useState(0);\r\n  const [balances, setBalances] = React.useState([]);\r\n  const [topAccounts, setTopAccounts] = React.useState([]);\r\n  React.useEffect(() => {\r\n    // 帳戶資料\r\n    db.collection(\"accounts\")\r\n      .where(\"prior\", \"<=\", \"3\")\r\n      .get()\r\n      .then((snapshot) => {\r\n        const data = snapshot.docs.map((doc) => {\r\n          return { ...doc.data(), id: doc.id };\r\n        });\r\n        setTopAccounts(data);\r\n        console.log(topAccounts);\r\n      });\r\n    // 收支資料\r\n    if (activeAccount) {\r\n      db.collection(\"balances\")\r\n        .where(\"account.id\", \"==\", activeAccount.id)\r\n        .onSnapshot((snapshot) => {\r\n          const data = snapshot.docs.map((doc) => {\r\n            return { ...doc.data(), id: doc.id };\r\n          });\r\n          setBalances(data);\r\n        });\r\n    } else {\r\n      db.collection(\"balances\").onSnapshot((snapshot) => {\r\n        const data = snapshot.docs.map((doc) => {\r\n          return { ...doc.data(), id: doc.id };\r\n        });\r\n        setBalances(data);\r\n      });\r\n    }\r\n  }, [activeAccount]);\r\n\r\n  function saveRow() {\r\n    let row = {\r\n      title,\r\n      date,\r\n    };\r\n    if (isIncome == \"income\") {\r\n      row.income = income;\r\n    } else {\r\n      row.expense = income;\r\n    }\r\n    if (account) {\r\n      row.account = account;\r\n    }\r\n\r\n    if (activeAccount) {\r\n      row.account = activeAccount;\r\n    }\r\n\r\n    if (docID) {\r\n      db.collection(\"balances\")\r\n        .doc(docID)\r\n        .set(row)\r\n        .then(() => {\r\n          setDefalut();\r\n        });\r\n    } else {\r\n      db.collection(\"balances\")\r\n        .add(row)\r\n        .then(() => {\r\n          setDefalut();\r\n        });\r\n    }\r\n  }\r\n\r\n  function deleteRow() {\r\n    if (docID) {\r\n      db.collection(\"balances\")\r\n        .doc(docID)\r\n        .delete()\r\n        .then(() => {\r\n          console.log(\"add\");\r\n          setDefalut();\r\n        });\r\n    }\r\n  }\r\n\r\n  function setDefalut() {\r\n    setOpen(false);\r\n    setDocID(\"\");\r\n    setTitle(\"\");\r\n    setIncome(\"\");\r\n  }\r\n\r\n  function handleItemClick(e, { name }) {\r\n    setIsIncome(name);\r\n  }\r\n  return (\r\n    <>\r\n      <Header></Header>\r\n      <Container>\r\n        <Modal\r\n          closeIcon\r\n          open={open}\r\n          onClose={() => {\r\n            setOpen(false);\r\n            setDefalut();\r\n          }}\r\n        >\r\n          <Header>編輯收支</Header>\r\n          <Modal.Content>\r\n            <Menu fluid widths={2} pointing secondary>\r\n              <Menu.Item\r\n                color=\"teal\"\r\n                name=\"income\"\r\n                active={isIncome === \"income\"}\r\n                onClick={handleItemClick}\r\n              >\r\n                收入\r\n              </Menu.Item>\r\n              <Menu.Item\r\n                color=\"orange\"\r\n                name=\"expense\"\r\n                active={isIncome === \"expense\"}\r\n                onClick={handleItemClick}\r\n              >\r\n                支出\r\n              </Menu.Item>\r\n            </Menu>\r\n            <Form size=\"large\">\r\n              <Form.Field>\r\n                <label>日期</label>\r\n                <input\r\n                  type=\"date\"\r\n                  value={date}\r\n                  onChange={(e) => {\r\n                    setDate(e.target.value);\r\n                  }}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>項目</label>\r\n                <input\r\n                  value={title}\r\n                  onChange={(e) => {\r\n                    setTitle(e.target.value);\r\n                  }}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>金額</label>\r\n                <input\r\n                  type=\"number\"\r\n                  value={income}\r\n                  onChange={(e) => {\r\n                    setIncome(e.target.value);\r\n                  }}\r\n                />\r\n              </Form.Field>\r\n            </Form>\r\n          </Modal.Content>\r\n          <Modal.Actions>\r\n            {docID && (\r\n              <Button color=\"red\" floated=\"left\" onClick={deleteRow}>\r\n                <Icon name=\"remove\" />\r\n                Delete\r\n              </Button>\r\n            )}\r\n\r\n            <Button color=\"green\" onClick={saveRow}>\r\n              <Icon name=\"check\" />\r\n              Save\r\n            </Button>\r\n          </Modal.Actions>\r\n        </Modal>\r\n        {/* 帳戶 */}\r\n        <Grid columns=\"equal\">\r\n          <Grid.Row>\r\n            {topAccounts.map((row, i) => {\r\n              return (\r\n                <Grid.Column key={i}>\r\n                  <Segment\r\n                    textAlign=\"center\"\r\n                    onClick={() => {\r\n                      setActiveItem(row.name);\r\n                      setActiveBalance(row.balance);\r\n                      setActiveAccount(row);\r\n                    }}\r\n                    color=\"teal\"\r\n                    inverted={activeItem === row.name}\r\n                  >\r\n                    {row.name}\r\n                  </Segment>\r\n                </Grid.Column>\r\n              );\r\n            })}\r\n          </Grid.Row>\r\n          {activeItem && (\r\n            <Grid.Row>\r\n              <Grid.Column>\r\n                <Statistic horizontal>\r\n                  <Statistic.Value>\r\n                    {numFormat(activeAccount.balance)}\r\n                  </Statistic.Value>\r\n                  {/* <Statistic.Label>玉山</Statistic.Label> */}\r\n                </Statistic>\r\n              </Grid.Column>\r\n\r\n              <Grid.Column verticalAlign=\"middle\">\r\n                <Button\r\n                  floated=\"right\"\r\n                  color=\"blue\"\r\n                  onClick={() => {\r\n                    setOpen(true);\r\n                    // setIsIncome('income')\r\n                  }}\r\n                >\r\n                  <Icon name=\"plus\" /> Create\r\n                </Button>\r\n              </Grid.Column>\r\n            </Grid.Row>\r\n          )}\r\n          {/*資料表格*/}\r\n          <Grid.Row>\r\n            <Grid.Column>\r\n              {balances.map((row, i) => {\r\n                return (\r\n                  <Table key={i} unstackable>\r\n                    <Table.Body>\r\n                      <Table.Row\r\n                        onClick={() => {\r\n                          setOpen(true);\r\n                          setDocID(row.id);\r\n                          setTitle(row.title);\r\n                          setDate(row.date);\r\n                          setAccount(row.account);\r\n\r\n                          if (row.income) {\r\n                            setIsIncome(\"income\");\r\n                            setIncome(row.income);\r\n                          } else {\r\n                            setIsIncome(\"expense\");\r\n                            setIncome(row.expense);\r\n                          }\r\n                        }}\r\n                      >\r\n                        <Table.Cell>\r\n                          <Header as=\"h4\">{row.title}</Header>\r\n                          <span>{row.date} </span>\r\n                        {!activeAccount && <Label>{row.account && row.account.name}</Label> }  \r\n                         \r\n                        </Table.Cell>\r\n                        <Table.Cell textAlign=\"right\">\r\n                          {row.income ? (\r\n                            <Label color=\"teal\" circular>\r\n                              存\r\n                            </Label>\r\n                          ) : (\r\n                            <Label color=\"orange\" circular>\r\n                              提\r\n                            </Label>\r\n                          )}\r\n                          <br></br>\r\n                          $ {row.income ? numFormat(row.income) : numFormat(row.expense) + \"\"}\r\n                        </Table.Cell>\r\n                      </Table.Row>\r\n                    </Table.Body>\r\n                  </Table>\r\n                );\r\n              })}\r\n            </Grid.Column>\r\n          </Grid.Row>\r\n        </Grid>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Balances;\r\n","import {\r\n  Form,\r\n  Modal,\r\n  Container,\r\n  Button,\r\n  Grid,\r\n  Segment,\r\n} from \"semantic-ui-react\";\r\nimport React from \"react\";\r\nimport { auth } from \"../utils/firebase\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default function Login() {\r\n    const history = useHistory()\r\n  const email = React.useRef();\r\n  const password = React.useRef();\r\n  return (\r\n    <Container>\r\n      <Grid columns={3}>\r\n        <Grid.Row>\r\n          <Grid.Column mobile={16} tablet={3} computer={5}></Grid.Column>\r\n          <Grid.Column mobile={16} tablet={10} computer={6}>\r\n            <Segment>\r\n              <Form size=\"large\">\r\n                <Form.Field>\r\n                  <label>Email</label>\r\n                  <input ref={email} defaultValue=\"mkdodos@gmail.com\"></input>\r\n                </Form.Field>\r\n                <Form.Field>\r\n                  <label>Password</label>\r\n                  <input ref={password} defaultValue=\"123456\"></input>\r\n                </Form.Field>\r\n                <Button\r\n                  onClick={() => {\r\n                    auth\r\n                      .signInWithEmailAndPassword(\r\n                        email.current.value,\r\n                        password.current.value\r\n                      )\r\n                      .then((userCrendential) => {\r\n                        history.push('/user')\r\n                        console.log(userCrendential.user.email);\r\n                      });\r\n                    // console.log(password.current.value);\r\n                  }}\r\n                  size=\"large\"\r\n                  color=\"blue\"\r\n                >\r\n                  Mark\r\n                </Button>\r\n                <Button\r\n                  basic\r\n                  floated=\"right\"\r\n                  onClick={() => {\r\n                    auth\r\n                      .signInWithEmailAndPassword(\"dada@gmail.com\", \"123456\")\r\n                      .then((userCrendential) => {\r\n                        console.log(userCrendential.user.email);\r\n                        history.push('/user')\r\n                      });\r\n                  }}\r\n                  size=\"large\"\r\n                  color=\"blue\"\r\n                >\r\n                  Dada\r\n                </Button>\r\n              </Form>\r\n            </Segment>\r\n          </Grid.Column>\r\n          <Grid.Column mobile={16} tablet={3} computer={5}></Grid.Column>\r\n        </Grid.Row>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n}\r\n","import { auth } from \"../utils/firebase\";\r\nimport { Button, Container } from \"semantic-ui-react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nexport default function () {\r\n  const history = useHistory();\r\n  const user = auth.currentUser;\r\n  return (\r\n    <Container>\r\n      <Button\r\n        onClick={() => {\r\n          auth.signOut().then(() => {\r\n            history.push(\"/login\");\r\n          });\r\n        }}\r\n      >\r\n        {user && user.email}\r\n      </Button>\r\n    </Container>\r\n  );\r\n}\r\n","import Header from \"./Header\";\r\nimport Accounts from \"./components/Accounts\";\r\nimport {\r\n  BrowserRouter,\r\n  Route,\r\n  Link,\r\n  Switch,\r\n  useHistory,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\nimport Posts from \"./components/Posts\";\r\nimport Balances from \"./components/Balances\";\r\nimport Login from \"./components/Login\";\r\nimport User from \"./components/User\";\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <BrowserRouter>\r\n        <Header></Header>\r\n        <Switch>\r\n          <Route path=\"/accounts\" component={Accounts}></Route>\r\n          <Route path=\"/balances\" component={Balances}></Route>\r\n          <Route path=\"/login\" component={Login}></Route>\r\n          <Route path=\"/user\" component={User}></Route>\r\n          <Route path=\"/posts\" component={Posts}></Route>\r\n        </Switch>\r\n      </BrowserRouter>\r\n      {/* <Container>\r\n        <Topics />\r\n        <Posts />\r\n      </Container> */}\r\n    </>\r\n  );\r\n}\r\nexport default App;\r\n","import ReactDom from 'react-dom'\r\nimport App from './App';\r\nimport 'semantic-ui-css/semantic.min.css'\r\n\r\nconst container = document.getElementById('root');\r\nReactDom.render(<App/>,container)"],"sourceRoot":""}