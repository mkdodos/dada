{"version":3,"sources":["Header.js","utils/firebase.js","utils/stringFormat.js","components/Accounts.js","components/Posts.js","components/Balances.js","components/Login.js","App.js","index.js"],"names":["Header","React","useState","activeItem","setActiveItem","handleClick","e","name","Menu","secondary","pointing","widths","Item","as","Link","to","onClick","active","position","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","db","firestore","collection","get","then","snapshot","docs","map","doc","data","numFormat","total","Intl","NumberFormat","currency","format","Accounts","open","setOpen","docID","setDocID","setName","balance","setBalance","prior","setPrior","gridRows","setGridRows","setDefalut","useEffect","orderBy","onSnapshot","rows","id","grid","i","columns","length","push","Grid","Column","Segment","textAlign","Label","attached","Row","row","color","Container","className","Modal","closeIcon","onClose","Content","Form","size","Field","value","onChange","target","placeholder","type","Dropdown","selection","options","key","text","obj","Actions","Button","floated","delete","Icon","update","updatedAt","Timestamp","now","add","createdAt","Posts","title","setTitle","income","setIncome","Date","toISOString","slice","date","setDate","isIncome","setIsIncome","activeBalance","setActiveBalance","posts","setPosts","topAccounts","setTopAccounts","handleItemClick","where","console","log","fluid","expense","set","inverted","Statistic","horizontal","Value","verticalAlign","Table","unstackable","Body","Cell","circular","Balances","account","setAccount","activeAccount","setActiveAccount","balances","setBalances","Login","mobile","tablet","computer","App","path","component","container","document","getElementById","ReactDom","render"],"mappings":"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","file":"static/js/main.37e89c4b.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Menu, Icon } from \"semantic-ui-react\";\r\nimport { Link } from \"react-router-dom\";\r\nfunction Header() {\r\n  const [activeItem, setActiveItem] = React.useState(\"\");\r\n  function handleClick(e, { name }) {\r\n    setActiveItem(name);\r\n  }\r\n  return (\r\n    <Menu secondary pointing widths={4}>\r\n      <Menu.Item\r\n        as={Link}\r\n        to=\"/accounts\"\r\n        name=\"accounts\"\r\n        onClick={handleClick}\r\n        active={activeItem === \"accounts\"}\r\n      >\r\n        {/* <Icon name=\"user\" disabled={activeItem !== \"home\"} /> */}\r\n        帳戶\r\n      </Menu.Item>\r\n      <Menu.Item\r\n        as={Link}\r\n        to=\"/balances\"\r\n        name=\"balances\"\r\n        onClick={handleClick}\r\n        active={activeItem === \"balances\"}\r\n      >\r\n        收支\r\n      </Menu.Item>\r\n      {/* <Menu.Item\r\n        as={Link}\r\n        to=\"/posts\"\r\n        name=\"posts\"\r\n        onClick={handleClick}\r\n        active={activeItem === \"posts\"}\r\n      >\r\n        Posts\r\n      </Menu.Item> */}\r\n      <Menu.Item\r\n        name=\"login\"\r\n        as={Link}\r\n        to=\"/login\"\r\n        onClick={handleClick}\r\n        active={activeItem === \"login\"}\r\n      >\r\n        Login\r\n      </Menu.Item>\r\n\r\n      <Menu.Menu position=\"right\">\r\n        <Menu.Item name=\"logout\" />\r\n      </Menu.Menu>\r\n    </Menu>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import firebase from 'firebase/app'\r\nimport 'firebase/firestore'\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyBKVsNm8RP9VKYBgEwmyRQsitx9dncLuaI\",\r\n    authDomain: \"social-cool-f16ba.firebaseapp.com\",\r\n    projectId: \"social-cool-f16ba\",\r\n    storageBucket: \"social-cool-f16ba.appspot.com\",\r\n    messagingSenderId: \"578558980743\",\r\n    appId: \"1:578558980743:web:4668ba80e8df3c24087e22\"\r\n  };\r\n\r\n firebase.initializeApp(firebaseConfig)\r\n  const db = firebase.firestore()\r\n\r\n  const col = db.collection('topics').get().then((snapshot)=>{\r\n    const data = snapshot.docs.map(doc=>{\r\n        return doc.data()\r\n    })\r\n    // console.log(data)\r\n  })\r\n\r\n  export default firebase\r\n  export {db}","const numFormat = function numberFormat(total) {\r\n  var formatter = new Intl.NumberFormat(\"en-US\", {\r\n    currency: \"USD\", // 2,500\r\n   /* style: \"currency\"  $2,500.00 */\r\n  });\r\n  return formatter.format(total);\r\n};\r\n\r\nexport { numFormat };\r\n","import React from \"react\";\r\nimport {\r\n  Grid,\r\n  Segment,\r\n  Label,\r\n  Header,\r\n  Button,\r\n  Icon,\r\n  Modal,\r\n  Form,\r\n  Dropdown,\r\n  Container\r\n} from \"semantic-ui-react\";\r\nimport firebase, { db } from \"../utils/firebase\";\r\nimport { numFormat } from \"../utils/stringFormat\";\r\n\r\nexport default function Accounts() {\r\n  // 編輯視窗顯示控制\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  // 資料欄位\r\n  //  { name: \"土地銀行1\", balance: \"908\", prior: \"1\" },\r\n  const [docID, setDocID] = React.useState(\"\");\r\n  const [name, setName] = React.useState(\"\");\r\n  const [balance, setBalance] = React.useState(\"\");\r\n  const [prior, setPrior] = React.useState(\"\");\r\n\r\n  // 區塊顯示\r\n  const [gridRows, setGridRows] = React.useState([]);\r\n\r\n  React.useEffect(() => {\r\n    db.collection(\"accounts\")\r\n      .orderBy(\"prior\")\r\n      .onSnapshot((snapshot) => {\r\n        const rows = snapshot.docs.map((doc) => {\r\n          return { ...doc.data(), id: doc.id };\r\n        });\r\n\r\n        const grid = [];\r\n        let i = 0;\r\n        let columns = [];\r\n        // 沒有資料時,顯示新增鈕\r\n        if (rows.length == 0) {\r\n          columns.push(\r\n            <Grid.Column key=\"0\">\r\n              <Segment\r\n                textAlign=\"center\"\r\n                onClick={() => {\r\n                  setOpen(true);\r\n                }}\r\n              >\r\n                <Label attached=\"top\">新增</Label>\r\n\r\n                <Header>+</Header>\r\n              </Segment>\r\n            </Grid.Column>\r\n          );\r\n          grid.push(<Grid.Row key={i}>{columns}</Grid.Row>);\r\n        }\r\n        for (let row of rows) {\r\n          // 資料區塊最前面放置新增鈕\r\n          if (i == 0) {\r\n            columns.push(\r\n              <Grid.Column key=\"0\">\r\n                <Segment\r\n                  textAlign=\"center\"\r\n                  onClick={() => {\r\n                    setOpen(true);\r\n                  }}\r\n                >\r\n                  <Label attached=\"top\">新增</Label>\r\n                  <Header>+</Header>\r\n                </Segment>\r\n              </Grid.Column>\r\n            );\r\n          }\r\n          // 資料區塊\r\n          columns.push(\r\n            <Grid.Column key={i + 1}>\r\n              <Segment\r\n                textAlign=\"center\"\r\n                onClick={() => {\r\n                  setOpen(true);\r\n                  setDocID(row.id);\r\n                  setName(row.name);\r\n                  setPrior(row.prior);\r\n                  setBalance(row.balance);\r\n                }}\r\n              >\r\n                <Label color=\"teal\" attached=\"top\">\r\n                  {row.name}\r\n                </Label>\r\n                <Header>{numFormat(row.balance)}</Header>\r\n              </Segment>\r\n            </Grid.Column>\r\n          );\r\n          // 每列3筆區塊\r\n          // i = 1,4,7... 或最後一筆時加入一列\r\n          // + 0 1\r\n          // 2 3 4\r\n          // 5 6\r\n          if (i % 3 == 1 || i == rows.length - 1) {\r\n            grid.push(<Grid.Row key={i}>{columns}</Grid.Row>);\r\n            columns = [];\r\n          }\r\n\r\n          i++;\r\n        }\r\n        setGridRows(grid);\r\n      });\r\n  }, []);\r\n\r\n  function saveRow() {\r\n    if (docID) {\r\n      db.collection(\"accounts\").doc(docID).update({\r\n        name: name,\r\n        balance: balance,\r\n        prior: prior,\r\n        updatedAt: firebase.firestore.Timestamp.now(),\r\n      });\r\n    } else {\r\n      db.collection(\"accounts\").add({\r\n        name: name,\r\n        balance: balance,\r\n        prior,\r\n        createdAt: firebase.firestore.Timestamp.now(),\r\n      });\r\n    }\r\n\r\n    setDefalut();\r\n  }\r\n\r\n  function deleteRow() {\r\n    if (docID) {\r\n      db.collection(\"accounts\")\r\n        .doc(docID)\r\n        .delete()\r\n        .then(() => {\r\n          setDefalut();\r\n        });\r\n    }\r\n  }\r\n\r\n  function setDefalut() {\r\n    setOpen(false);\r\n    setName(\"\");\r\n    setBalance(\"\");\r\n    setPrior(\"\");\r\n  }\r\n\r\n  \r\n\r\n  const friendOptions = [\r\n    {\r\n      key: \"1\",\r\n      text: \"1\",\r\n      value: \"1\",\r\n    },\r\n    {\r\n      key: \"2\",\r\n      text: \"2\",\r\n      value: \"2\",\r\n    },\r\n    {\r\n      key: \"3\",\r\n      text: \"3\",\r\n      value: \"3\",\r\n    },\r\n    {\r\n      key: \"4\",\r\n      text: \"4\",\r\n      value: \"4\",\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n     <Container>\r\n      <div className=\"App\">\r\n        <Grid columns={3}>{gridRows}</Grid>\r\n      </div>\r\n\r\n      <Modal\r\n        closeIcon\r\n        open={open}\r\n        onClose={() => {\r\n          setOpen(false);\r\n          setDefalut();\r\n        }}\r\n      >\r\n        <Header>編輯帳戶</Header>\r\n        <Modal.Content>\r\n          <Form size=\"large\">\r\n            <Form.Field>\r\n              <label>帳戶名稱</label>\r\n              <input\r\n                value={name}\r\n                onChange={(e) => {\r\n                  setName(e.target.value);\r\n                }}\r\n                placeholder=\"please enter your name\"\r\n              />\r\n            </Form.Field>\r\n            <Form.Field>\r\n              <label>餘額</label>\r\n              <input\r\n                type=\"number\"\r\n                value={balance}\r\n                onChange={(e) => {\r\n                  setBalance(e.target.value);\r\n                }}\r\n                placeholder=\"please enter your amount\"\r\n              />\r\n            </Form.Field>\r\n            <Form.Field>\r\n              <label>順位</label>\r\n              <Dropdown\r\n                selection\r\n                value={prior}\r\n                placeholder=\"順位\"\r\n                options={friendOptions}\r\n                onChange={(e, obj) => {\r\n                  setPrior(obj.value);\r\n                }}\r\n              ></Dropdown>\r\n            </Form.Field>\r\n          </Form>\r\n        </Modal.Content>\r\n        <Modal.Actions>\r\n          <Button color=\"red\" floated=\"left\" onClick={deleteRow}>\r\n            <Icon name=\"remove\" />\r\n            Delete\r\n          </Button>\r\n          <Button color=\"green\" onClick={saveRow}>\r\n            <Icon name=\"check\" />\r\n            Save\r\n          </Button>\r\n        </Modal.Actions>\r\n      </Modal>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n","import { db } from \"../utils/firebase\";\r\nimport React from \"react\";\r\nimport { numFormat } from \"../utils/stringFormat\";\r\n\r\nimport {\r\n  Grid,\r\n  Label,\r\n  Icon,\r\n  Container,\r\n  Segment,\r\n  Menu,\r\n  Card,\r\n  List,\r\n  Button,\r\n  Table,\r\n  Header,\r\n  Statistic,\r\n  Modal,\r\n  Form,\r\n} from \"semantic-ui-react\";\r\nfunction Posts() {\r\n  const rows = [\r\n    { name: \"現金\", amt: \"678\", date: \"2022-09-01\" },\r\n    { name: \"信用卡\", amt: \"4,567\", date: \"2022-01-08\" },\r\n    { name: \"玉山\", amt: \"908\", date: \"2022-10-22\" },\r\n    { name: \"中國信託\", amt: \"908\", date: \"2022-10-22\" },\r\n  ];\r\n  // 編輯視窗顯示控制\r\n  const [open, setOpen] = React.useState(false);\r\n  // 資料欄位\r\n  const [docID, setDocID] = React.useState(\"\");\r\n  const [title, setTitle] = React.useState(\"\");\r\n  const [income, setIncome] = React.useState(\"\");\r\n  const [date, setDate] = React.useState(new Date().toISOString().slice(0, 10));\r\n\r\n  const [isIncome, setIsIncome] = React.useState(\"income\");\r\n\r\n  const [activeItem, setActiveItem] = React.useState(\"\");\r\n  const [activeBalance, setActiveBalance] = React.useState(0);\r\n  const [posts, setPosts] = React.useState([]);\r\n  const [topAccounts, setTopAccounts] = React.useState([]);\r\n  React.useEffect(() => {\r\n    db.collection(\"topics\")\r\n      .where(\"prior\", \"<=\", \"3\")\r\n      .get()\r\n      .then((snapshot) => {\r\n        const data = snapshot.docs.map((doc) => {\r\n          return doc.data();\r\n        });\r\n        setTopAccounts(data);\r\n        console.log(data);\r\n      });\r\n\r\n    db.collection(\"posts\").onSnapshot((snapshot) => {\r\n      const data = snapshot.docs.map((doc) => {\r\n        return { ...doc.data(), id: doc.id };\r\n      });\r\n      setPosts(data);\r\n    });\r\n  }, []);\r\n\r\n  function saveRow() {\r\n    let row = {\r\n      title,\r\n      date\r\n    };\r\n    if(isIncome=='income'){\r\n      row.income = income;\r\n    }else{\r\n      row.expense = income;\r\n    }\r\n    \r\n    if (docID) {\r\n      db.collection(\"posts\")\r\n        .doc(docID)\r\n        .set(row)\r\n        .then(() => {\r\n          setDefalut();\r\n        });\r\n    } else {\r\n      db.collection(\"posts\")\r\n        .add(row)\r\n        .then(() => {\r\n          setDefalut();\r\n        });\r\n    }\r\n  }\r\n\r\n  function deleteRow() {\r\n    if (docID) {\r\n      db.collection(\"posts\")\r\n        .doc(docID)\r\n        .delete()\r\n        .then(() => {\r\n          console.log(\"add\");\r\n          setDefalut();\r\n        });\r\n    }\r\n  }\r\n\r\n  function setDefalut() {\r\n    setOpen(false);\r\n    setDocID(\"\");\r\n    setTitle(\"\");\r\n    setIncome(\"\");\r\n  }\r\n\r\n  function handleItemClick(e, { name }) {\r\n      setIsIncome(name)\r\n  }\r\n  return (\r\n    <>\r\n      <Header></Header>\r\n      <Container>\r\n        <Modal\r\n          closeIcon\r\n          open={open}\r\n          onClose={() => {\r\n            setOpen(false);\r\n            setDefalut();\r\n          }}\r\n        >\r\n          <Header>編輯收支</Header>\r\n          <Modal.Content>\r\n            <Menu fluid widths={2} pointing secondary  >\r\n              <Menu.Item \r\n              color='teal'\r\n              \r\n                name=\"income\"\r\n                active={isIncome === \"income\"}\r\n                onClick={handleItemClick}\r\n              >收入</Menu.Item>\r\n              <Menu.Item\r\n              color='orange'\r\n                name=\"expense\"\r\n                active={isIncome === \"expense\"}\r\n                onClick={handleItemClick}\r\n              >支出</Menu.Item>\r\n              \r\n            </Menu>\r\n            <Form size=\"large\">\r\n            <Form.Field>\r\n                <label>日期</label>\r\n                <input\r\n                type=\"date\"\r\n                  value={date}\r\n                  onChange={(e) => {\r\n                    setDate(e.target.value);\r\n                  }}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>項目</label>\r\n                <input\r\n                  value={title}\r\n                  onChange={(e) => {\r\n                    setTitle(e.target.value);\r\n                  }}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>金額</label>\r\n                <input\r\n                  type=\"number\"\r\n                  value={income}\r\n                  onChange={(e) => {\r\n                    setIncome(e.target.value);\r\n                  }}\r\n                />\r\n              </Form.Field>\r\n            </Form>\r\n          </Modal.Content>\r\n          <Modal.Actions>\r\n            {docID && <Button color=\"red\" floated=\"left\" onClick={deleteRow}>\r\n              <Icon name=\"remove\" />\r\n              Delete\r\n            </Button>}\r\n            \r\n            <Button color=\"green\" onClick={saveRow}>\r\n              <Icon name=\"check\" />\r\n              Save\r\n            </Button>\r\n          </Modal.Actions>\r\n        </Modal>\r\n        {/* 帳戶 */}\r\n        <Grid columns=\"equal\">\r\n          <Grid.Row>\r\n            {topAccounts.map((row, i) => {\r\n              return (\r\n                <Grid.Column key={i}>\r\n                  <Segment\r\n                    textAlign=\"center\"\r\n                    onClick={() => {\r\n                      setActiveItem(row.name);\r\n                      setActiveBalance(row.balance);\r\n                    }}\r\n                    color=\"teal\"\r\n                    inverted={activeItem === row.name}\r\n                  >\r\n                    {row.name}\r\n                  </Segment>\r\n                </Grid.Column>\r\n              );\r\n            })}\r\n          </Grid.Row>\r\n          {activeItem && (\r\n            <Grid.Row>\r\n              <Grid.Column>\r\n                <Statistic horizontal>\r\n                  <Statistic.Value>{numFormat(activeBalance)}</Statistic.Value>\r\n                  {/* <Statistic.Label>玉山</Statistic.Label> */}\r\n                </Statistic>\r\n              </Grid.Column>\r\n\r\n              <Grid.Column verticalAlign=\"middle\">\r\n                <Button\r\n                  floated=\"right\"\r\n                  color=\"blue\"\r\n                  onClick={() => {\r\n                    setOpen(true);\r\n                    // setIsIncome('income')\r\n                  }}\r\n                >\r\n                  <Icon name=\"plus\" /> Create\r\n                </Button>\r\n              </Grid.Column>\r\n            </Grid.Row>\r\n          )}\r\n          {/*資料表格*/}\r\n          <Grid.Row>\r\n            <Grid.Column>\r\n              {posts.map((row, i) => {\r\n                return (\r\n                  <Table key={i} unstackable>\r\n                    <Table.Body>\r\n                      <Table.Row\r\n                        onClick={() => {\r\n                          setOpen(true);\r\n                          setDocID(row.id);\r\n                          setTitle(row.title);\r\n                          setDate(row.date)\r\n                          if(row.income){\r\n                            setIsIncome('income')\r\n                            setIncome(row.income);\r\n                          }else{\r\n                            setIsIncome('expense')\r\n                            setIncome(row.expense);\r\n\r\n                          }\r\n                          \r\n                        }}\r\n                      >\r\n                        <Table.Cell>\r\n                          <Header as=\"h4\">{row.title}</Header>\r\n                          {row.date}\r\n                        </Table.Cell>\r\n                        <Table.Cell textAlign=\"right\">\r\n                          {row.income ? (\r\n                            <Label color=\"teal\" circular>\r\n                              存\r\n                            </Label>\r\n                          ) : (\r\n                            <Label color=\"orange\" circular>\r\n                              提\r\n                            </Label>\r\n                          )}\r\n                          <br></br>${\" \"}\r\n                          {row.income ? row.income : row.expense + \"\"}\r\n                        </Table.Cell>\r\n                      </Table.Row>\r\n                    </Table.Body>\r\n                  </Table>\r\n                );\r\n              })}\r\n            </Grid.Column>\r\n          </Grid.Row>\r\n        </Grid>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\nexport default Posts;\r\n","import { db } from \"../utils/firebase\";\r\nimport React from \"react\";\r\nimport { numFormat } from \"../utils/stringFormat\";\r\n\r\nimport {\r\n  Grid,\r\n  Label,\r\n  Icon,\r\n  Container,\r\n  Segment,\r\n  Menu,\r\n  Card,\r\n  List,\r\n  Button,\r\n  Table,\r\n  Header,\r\n  Statistic,\r\n  Modal,\r\n  Form,\r\n} from \"semantic-ui-react\";\r\nfunction Balances() {\r\n  // 編輯視窗顯示控制\r\n  const [open, setOpen] = React.useState(false);\r\n  // 資料欄位\r\n  const [docID, setDocID] = React.useState(\"\");\r\n  const [title, setTitle] = React.useState(\"\");\r\n  const [income, setIncome] = React.useState(\"\");\r\n  const [account, setAccount] = React.useState();\r\n  const [date, setDate] = React.useState(new Date().toISOString().slice(0, 10));\r\n  // 收支判斷\r\n  const [isIncome, setIsIncome] = React.useState(\"income\");\r\n  // 選取帳戶\r\n  const [activeAccount, setActiveAccount] = React.useState() || null;\r\n\r\n  const [activeItem, setActiveItem] = React.useState(\"\");\r\n  const [activeBalance, setActiveBalance] = React.useState(0);\r\n  const [balances, setBalances] = React.useState([]);\r\n  const [topAccounts, setTopAccounts] = React.useState([]);\r\n  React.useEffect(() => {\r\n    // 帳戶資料\r\n    db.collection(\"accounts\")\r\n      .where(\"prior\", \"<=\", \"3\")\r\n      .get()\r\n      .then((snapshot) => {\r\n        const data = snapshot.docs.map((doc) => {\r\n          return { ...doc.data(), id: doc.id };\r\n        });\r\n        setTopAccounts(data);\r\n        console.log(topAccounts);\r\n      });\r\n    // 收支資料\r\n    if (activeAccount) {\r\n      db.collection(\"balances\")\r\n        .where(\"account.id\", \"==\", activeAccount.id)\r\n        .onSnapshot((snapshot) => {\r\n          const data = snapshot.docs.map((doc) => {\r\n            return { ...doc.data(), id: doc.id };\r\n          });\r\n          setBalances(data);\r\n        });\r\n    } else {\r\n      db.collection(\"balances\").onSnapshot((snapshot) => {\r\n        const data = snapshot.docs.map((doc) => {\r\n          return { ...doc.data(), id: doc.id };\r\n        });\r\n        setBalances(data);\r\n      });\r\n    }\r\n  }, [activeAccount]);\r\n\r\n  function saveRow() {\r\n    let row = {\r\n      title,\r\n      date,\r\n    };\r\n    if (isIncome == \"income\") {\r\n      row.income = income;\r\n    } else {\r\n      row.expense = income;\r\n    }\r\n    if (account) {\r\n      row.account = account;\r\n    }\r\n\r\n    if (activeAccount) {\r\n      row.account = activeAccount;\r\n    }\r\n\r\n    if (docID) {\r\n      db.collection(\"balances\")\r\n        .doc(docID)\r\n        .set(row)\r\n        .then(() => {\r\n          setDefalut();\r\n        });\r\n    } else {\r\n      db.collection(\"balances\")\r\n        .add(row)\r\n        .then(() => {\r\n          setDefalut();\r\n        });\r\n    }\r\n  }\r\n\r\n  function deleteRow() {\r\n    if (docID) {\r\n      db.collection(\"balances\")\r\n        .doc(docID)\r\n        .delete()\r\n        .then(() => {\r\n          console.log(\"add\");\r\n          setDefalut();\r\n        });\r\n    }\r\n  }\r\n\r\n  function setDefalut() {\r\n    setOpen(false);\r\n    setDocID(\"\");\r\n    setTitle(\"\");\r\n    setIncome(\"\");\r\n  }\r\n\r\n  function handleItemClick(e, { name }) {\r\n    setIsIncome(name);\r\n  }\r\n  return (\r\n    <>\r\n      <Header></Header>\r\n      <Container>\r\n        <Modal\r\n          closeIcon\r\n          open={open}\r\n          onClose={() => {\r\n            setOpen(false);\r\n            setDefalut();\r\n          }}\r\n        >\r\n          <Header>編輯收支</Header>\r\n          <Modal.Content>\r\n            <Menu fluid widths={2} pointing secondary>\r\n              <Menu.Item\r\n                color=\"teal\"\r\n                name=\"income\"\r\n                active={isIncome === \"income\"}\r\n                onClick={handleItemClick}\r\n              >\r\n                收入\r\n              </Menu.Item>\r\n              <Menu.Item\r\n                color=\"orange\"\r\n                name=\"expense\"\r\n                active={isIncome === \"expense\"}\r\n                onClick={handleItemClick}\r\n              >\r\n                支出\r\n              </Menu.Item>\r\n            </Menu>\r\n            <Form size=\"large\">\r\n              <Form.Field>\r\n                <label>日期</label>\r\n                <input\r\n                  type=\"date\"\r\n                  value={date}\r\n                  onChange={(e) => {\r\n                    setDate(e.target.value);\r\n                  }}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>項目</label>\r\n                <input\r\n                  value={title}\r\n                  onChange={(e) => {\r\n                    setTitle(e.target.value);\r\n                  }}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>金額</label>\r\n                <input\r\n                  type=\"number\"\r\n                  value={income}\r\n                  onChange={(e) => {\r\n                    setIncome(e.target.value);\r\n                  }}\r\n                />\r\n              </Form.Field>\r\n            </Form>\r\n          </Modal.Content>\r\n          <Modal.Actions>\r\n            {docID && (\r\n              <Button color=\"red\" floated=\"left\" onClick={deleteRow}>\r\n                <Icon name=\"remove\" />\r\n                Delete\r\n              </Button>\r\n            )}\r\n\r\n            <Button color=\"green\" onClick={saveRow}>\r\n              <Icon name=\"check\" />\r\n              Save\r\n            </Button>\r\n          </Modal.Actions>\r\n        </Modal>\r\n        {/* 帳戶 */}\r\n        <Grid columns=\"equal\">\r\n          <Grid.Row>\r\n            {topAccounts.map((row, i) => {\r\n              return (\r\n                <Grid.Column key={i}>\r\n                  <Segment\r\n                    textAlign=\"center\"\r\n                    onClick={() => {\r\n                      setActiveItem(row.name);\r\n                      setActiveBalance(row.balance);\r\n                      setActiveAccount(row);\r\n                    }}\r\n                    color=\"teal\"\r\n                    inverted={activeItem === row.name}\r\n                  >\r\n                    {row.name}\r\n                  </Segment>\r\n                </Grid.Column>\r\n              );\r\n            })}\r\n          </Grid.Row>\r\n          {activeItem && (\r\n            <Grid.Row>\r\n              <Grid.Column>\r\n                <Statistic horizontal>\r\n                  <Statistic.Value>\r\n                    {numFormat(activeAccount.balance)}\r\n                  </Statistic.Value>\r\n                  {/* <Statistic.Label>玉山</Statistic.Label> */}\r\n                </Statistic>\r\n              </Grid.Column>\r\n\r\n              <Grid.Column verticalAlign=\"middle\">\r\n                <Button\r\n                  floated=\"right\"\r\n                  color=\"blue\"\r\n                  onClick={() => {\r\n                    setOpen(true);\r\n                    // setIsIncome('income')\r\n                  }}\r\n                >\r\n                  <Icon name=\"plus\" /> Create\r\n                </Button>\r\n              </Grid.Column>\r\n            </Grid.Row>\r\n          )}\r\n          {/*資料表格*/}\r\n          <Grid.Row>\r\n            <Grid.Column>\r\n              {balances.map((row, i) => {\r\n                return (\r\n                  <Table key={i} unstackable>\r\n                    <Table.Body>\r\n                      <Table.Row\r\n                        onClick={() => {\r\n                          setOpen(true);\r\n                          setDocID(row.id);\r\n                          setTitle(row.title);\r\n                          setDate(row.date);\r\n                          setAccount(row.account);\r\n\r\n                          if (row.income) {\r\n                            setIsIncome(\"income\");\r\n                            setIncome(row.income);\r\n                          } else {\r\n                            setIsIncome(\"expense\");\r\n                            setIncome(row.expense);\r\n                          }\r\n                        }}\r\n                      >\r\n                        <Table.Cell>\r\n                          <Header as=\"h4\">{row.title}</Header>\r\n                          <span>{row.date} </span>\r\n                        {!activeAccount && <Label>{row.account && row.account.name}</Label> }  \r\n                         \r\n                        </Table.Cell>\r\n                        <Table.Cell textAlign=\"right\">\r\n                          {row.income ? (\r\n                            <Label color=\"teal\" circular>\r\n                              存\r\n                            </Label>\r\n                          ) : (\r\n                            <Label color=\"orange\" circular>\r\n                              提\r\n                            </Label>\r\n                          )}\r\n                          <br></br>\r\n                          $ {row.income ? numFormat(row.income) : numFormat(row.expense) + \"\"}\r\n                        </Table.Cell>\r\n                      </Table.Row>\r\n                    </Table.Body>\r\n                  </Table>\r\n                );\r\n              })}\r\n            </Grid.Column>\r\n          </Grid.Row>\r\n        </Grid>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Balances;\r\n","import { Form, Modal, Container, Button, Grid, Segment } from \"semantic-ui-react\";\r\nexport default function Login() {\r\n  return (\r\n    <Container>\r\n      <Grid columns={3}>\r\n        <Grid.Row>\r\n          <Grid.Column mobile={16} tablet={3} computer={5}>\r\n            \r\n          </Grid.Column>\r\n          <Grid.Column mobile={16} tablet={10} computer={6}>\r\n           <Segment>\r\n           <Form size=\"large\">\r\n              <Form.Field>\r\n                <label>Email</label>\r\n                <input></input>\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>Password</label>\r\n                <input></input>\r\n              </Form.Field>\r\n              <Button size=\"large\" fluid color=\"blue\">\r\n                Login\r\n              </Button>\r\n            </Form>\r\n           </Segment>\r\n            \r\n          </Grid.Column>\r\n          <Grid.Column mobile={16} tablet={3} computer={5}>\r\n            \r\n          </Grid.Column>\r\n        </Grid.Row>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n}\r\n","import Header from \"./Header\";\r\nimport Accounts from \"./components/Accounts\";\r\nimport {\r\n  BrowserRouter,\r\n  Route,\r\n  Link,\r\n  Switch,\r\n  useHistory,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\nimport Posts from \"./components/Posts\";\r\nimport Balances from \"./components/Balances\";\r\nimport Login from \"./components/Login\";\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <BrowserRouter>\r\n        <Header></Header>\r\n        <Switch>\r\n          <Route path=\"/accounts\" component={Accounts}></Route>\r\n          <Route path=\"/balances\" component={Balances}></Route>\r\n          <Route path=\"/login\" component={Login}></Route>\r\n          <Route path=\"/posts\" component={Posts}></Route>\r\n        </Switch>\r\n      </BrowserRouter>\r\n      {/* <Container>\r\n        <Topics />\r\n        <Posts />\r\n      </Container> */}\r\n    </>\r\n  );\r\n}\r\nexport default App;\r\n","import ReactDom from 'react-dom'\r\nimport App from './App';\r\nimport 'semantic-ui-css/semantic.min.css'\r\n\r\nconst container = document.getElementById('root');\r\nReactDom.render(<App/>,container)"],"sourceRoot":""}